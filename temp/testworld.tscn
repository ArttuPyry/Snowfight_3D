[gd_scene load_steps=17 format=3 uid="uid://ckdi3myxfa0w0"]

[ext_resource type="MeshLibrary" uid="uid://c1longh4ofg5u" path="res://environment/environment.tres" id="2_76oo2"]
[ext_resource type="PackedScene" uid="uid://def8ntasw0w85" path="res://player.tscn" id="2_77a1h"]
[ext_resource type="Texture2D" uid="uid://cglfvs0avblra" path="res://temp/croshair.png" id="3_rhcu6"]
[ext_resource type="PackedScene" uid="uid://cm0gdroi5jb8a" path="res://characters/enemy_basic.tscn" id="4_oa0vr"]
[ext_resource type="PackedScene" uid="uid://bnxloy30l5bnp" path="res://characters/enemy_with_shovel.tscn" id="5_rs8k7"]
[ext_resource type="PackedScene" uid="uid://cjgf5on2oppby" path="res://environment/spruce.tscn" id="6_6kmmr"]
[ext_resource type="PackedScene" uid="uid://be4khs6jnjhdt" path="res://environment/snowman.tscn" id="7_6pwac"]

[sub_resource type="Shader" id="Shader_4yrp5"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.1.3.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;

uniform sampler2D cloud_texture00;
uniform sampler2D cloud_texture01;
uniform vec2 cloud_direction00;
uniform vec2 cloud_direction01;
uniform vec2 cloud_scale;
uniform vec2 cloud_distance;
uniform float cloud_speed00;
uniform float cloud_speed01;

void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;
	
	vec2 sky_uv = EYEDIR.xz / EYEDIR.y;
	vec3 clouds = texture(cloud_texture00, (sky_uv * cloud_scale) + (TIME * cloud_direction00 * cloud_speed00 * 0.001)).rgb - texture(cloud_texture01, (sky_uv * cloud_scale) + (TIME * cloud_direction01 * cloud_speed01 * 0.01)).rgb;
	clouds = clamp(clouds, 0.05, 1);
	sky += clouds;
	
	COLOR = mix(ground, sky, step(0.0, EYEDIR.y));
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_35yth"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_jrnty"]
width = 64
height = 64
seamless = true
seamless_blend_skirt = 0.3
noise = SubResource("FastNoiseLite_35yth")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_np7fj"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_gbkce"]
width = 64
height = 64
seamless = true
seamless_blend_skirt = 0.3
noise = SubResource("FastNoiseLite_np7fj")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cbt7x"]
shader = SubResource("Shader_4yrp5")
shader_parameter/sky_top_color = Color(0.756863, 0.8, 0.862745, 1)
shader_parameter/sky_horizon_color = Color(0.646, 0.656, 0.67, 1)
shader_parameter/sky_curve = 0.15
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(1, 1, 1, 1)
shader_parameter/ground_bottom_color = Color(0.772549, 0.85098, 0.894118, 1)
shader_parameter/ground_horizon_color = Color(0.6463, 0.6558, 0.6708, 1)
shader_parameter/ground_curve = 0.02
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.15
shader_parameter/cloud_direction00 = Vector2(-1, 1)
shader_parameter/cloud_direction01 = Vector2(1, -1)
shader_parameter/cloud_scale = Vector2(0.1, 0.1)
shader_parameter/cloud_distance = Vector2(0.1, 0.1)
shader_parameter/cloud_speed00 = 0.1
shader_parameter/cloud_speed01 = 1.0
shader_parameter/cloud_texture00 = SubResource("NoiseTexture2D_jrnty")
shader_parameter/cloud_texture01 = SubResource("NoiseTexture2D_gbkce")

[sub_resource type="Sky" id="Sky_dgl4w"]
sky_material = SubResource("ShaderMaterial_cbt7x")

[sub_resource type="Environment" id="Environment_r7tp6"]
background_mode = 2
sky = SubResource("Sky_dgl4w")
ambient_light_color = Color(1, 1, 1, 1)
tonemap_mode = 2
glow_enabled = true
fog_light_color = Color(1, 1, 1, 1)
fog_density = 0.003

[sub_resource type="NavigationMesh" id="NavigationMesh_qv16l"]
vertices = PackedVector3Array(16, 0.403884, -12.25, 16, 0.403884, -10.5, 17.25, 0.403884, -10.5, 17.25, 0.403884, -18.25, -14, 0.403884, -11, -9.75, 0.403884, -10.75, -9.75, 0.403884, -12.25, -14, 0.403884, -11, -9.75, 0.403884, -12.25, -9.25, 0.403884, -12.75, -14, 0.403884, -18.5, 17.25, 0.403884, -25.75, 9.25, 0.403884, -41, 1.5, 0.403884, -41, -14, 0.403884, -26, -2.5, 0.403884, -12.75, 11.75, 0.403884, -12.75, 15.5, 0.403884, -12.75, 16, 0.403884, -12.25, 17.25, 0.403884, -18.25, -6.25, 0.403884, -41, -14, 0.403884, -33.5, -14, 0.403884, -26, 1.5, 0.403884, -41, 11.75, 0.403884, -12.75, 15.5, 0.403884, -12.75, 17.25, 0.403884, -18.25, 17.25, 0.403884, -25.75, -6.25, 0.403884, -41, -14, 0.403884, -41, -14, 0.403884, -33.5, 17.25, 0.403884, -33.5, 17.25, 0.403884, -41, 9.25, 0.403884, -41, -14, 0.403884, -18.5, -9.25, 0.403884, -12.75, -2.5, 0.403884, -12.75, -14, 0.403884, -26, -2.5, 0.403884, -12.75, -2, 0.403884, -12.25, 11.25, 0.403884, -12.25, 11.75, 0.403884, -12.75, 17.25, 0.403884, -25.75, 17.25, 0.403884, -33.5, 9.25, 0.403884, -41, 11.75, 0.403884, -6.75, 13.5, 0.403884, -6.75, 13.5, 0.403884, -8, 11.75, 0.403884, -8, -2.25, 0.403884, -2.5, 11.25, 0.403884, -2.5, 11.25, 0.403884, -6.25, 11.25, 0.403884, -6.25, 11.75, 0.403884, -6.75, 11.75, 0.403884, -8, 11.25, 0.403884, -8.5, -2, 0.403884, -12.25, -2.25, 0.403884, -2.5, 11.25, 0.403884, -8.5, 11.25, 0.403884, -12.25, -2, 0.403884, -12.25, -8.25, 4.15388, -11.25, -8.25, 4.15388, -3.75, -3.5, 3.90388, -3.75, -3.5, 3.90388, -11.25, -5.875, 5.40388, -11.25, -5.875, 5.40388, -3.75, -11.75, 0.403884, 0.75, -9, 0.403884, -2, -10, 0.403884, -2.75, -12.5, 0.403884, -0.25, -14, 0.403884, -11, -14, 0.403884, 0.5, -13.25, 0.403884, -0.25, -13.25, 0.403884, -0.25, -12.5, 0.403884, -0.25, -10, 0.403884, -2.75, -9.75, 0.403884, -10.75, -14, 0.403884, -11, 11.75, 0.403884, 4, 11.25, 0.403884, 3.5, 11, 0.403884, 4, 11.25, 0.403884, 5.25, 15.25, 0.403884, 4, 11.25, 0.403884, 5.25, 10, 0.403884, 6, 10, 0.403884, 14, 17.25, 0.403884, 14, 17.25, 0.403884, 7.75, 15.25, 0.403884, -2, 13.5, 0.403884, -2, 13.5, 0.403884, -0.75, 15.5, 0.403884, -0.75, 16, 0.403884, 3.25, 17.25, 0.403884, 7.75, 17.25, 0.403884, 1.75, 16, 0.403884, -0.25, 15.25, 0.403884, -2, 15.5, 0.403884, -0.75, 16, 0.403884, -0.25, 16, 0.403884, -2.75, 17.25, 0.403884, -10.5, 16, 0.403884, -10.5, 16, 0.403884, -8.75, 15.25, 0.403884, -8, 13.5, 0.403884, -8, 13.5, 0.403884, -6.75, 15.5, 0.403884, -6.75, 17.25, 0.403884, 7.75, 16, 0.403884, 3.25, 15.25, 0.403884, 4, 15.25, 0.403884, -8, 15.5, 0.403884, -6.75, 16, 0.403884, -6.25, 16, 0.403884, -8.75, 17.25, 0.403884, -4.5, 16, 0.403884, -2.75, 16, 0.403884, -0.25, 17.25, 0.403884, 1.75, 17.25, 0.403884, -4.5, 16, 0.403884, -6.25, 16, 0.403884, -2.75, 15.25, 0.403884, 4, 11.75, 0.403884, 4, 11.25, 0.403884, 5.25, 17.25, 0.403884, -4.5, 17.25, 0.403884, -10.5, 16, 0.403884, -8.75, 16, 0.403884, -6.25, -2.5, 0.403884, 8.25, -2, 0.403884, 8.75, -1.5, 0.403884, 8, 9.5, 0.403884, 3.75, 11, 0.403884, 4, 11.25, 0.403884, 3.5, 11.25, 0.403884, -0.25, 11.75, 0.403884, -0.75, 13.5, 0.403884, -0.75, 13.5, 0.403884, -2, 11.75, 0.403884, -2, -6.75, 0.403884, -2, -7, 0.403884, 5.25, -5.5, 0.403884, 5.25, -2.75, 0.403884, -2, 11.25, 0.403884, -0.25, 11.75, 0.403884, -0.75, 11.75, 0.403884, -2, 11.25, 0.403884, -0.25, 11.75, 0.403884, -2, 11.25, 0.403884, -2.5, 9.5, 0.403884, 3.75, 0, 0.403884, 9.25, 1.75, 0.403884, 9.5, 2.5, 0.403884, 9.5, -0.5, 0.403884, 8, -5.5, 0.403884, 5.25, -0.5, 0.403884, 8, 2.5, 0.403884, 9.5, 9, 0.403884, 5.25, 11.25, 0.403884, -2.5, -2.25, 0.403884, -2.5, -5, 0.403884, 8.25, -2.5, 0.403884, 8.25, -1.5, 0.403884, 8, -5, 0.403884, 5.75, 9, 0.403884, 5.25, 9.5, 0.403884, 3.75, 11.25, 0.403884, -2.5, -2.25, 0.403884, -2.5, -2.75, 0.403884, -2, -5.5, 0.403884, 5.25, -5.5, 0.403884, 5.25, -5, 0.403884, 5.75, -1.5, 0.403884, 8, -0.5, 0.403884, 8, -13.5, 0.403884, 2, -14, 0.403884, 1.5, -14, 0.403884, 3.75, -13.5, 0.403884, 3.25, -13.5, 0.403884, 5.5, -12.75, 0.403884, 8.75, -12.25, 0.403884, 8.25, -12.25, 0.403884, 5.5, -12.25, 0.403884, 2, -13.5, 0.403884, 2, -13.5, 0.403884, 3.25, -12.25, 0.403884, 3.25, -7, 0.403884, 5.25, -6.75, 0.403884, -2, -9, 0.403884, -2, -11.75, 0.403884, 0.75, -11.75, 0.403884, 3.75, -9.25, 0.403884, 5.25, -12.25, 0.403884, 2, -12.25, 0.403884, 3.25, -11.75, 0.403884, 3.75, -11.75, 0.403884, 0.75, -9.25, 0.403884, 5.25, -11.75, 0.403884, 3.75, -11.75, 0.403884, 5, -9.75, 0.403884, 5.75, -12.25, 0.403884, 5.5, -12.25, 0.403884, 8.25, -9.75, 0.403884, 8.25, -9.75, 0.403884, 5.75, -11.75, 0.403884, 5, -14, 0.403884, 5, -14, 0.403884, 14, -12.75, 0.403884, 14, -12.75, 0.403884, 8.75, -13.5, 0.403884, 5.5, -2, 0.403884, 14, -0.5, 0.403884, 14, -1, 0.403884, 13.5, -2, 0.403884, 14, -1, 0.403884, 13.5, -1, 0.403884, 12.25, 1.25, 0.403884, 11, 1.75, 0.403884, 9.5, 0, 0.403884, 9.25, -0.5, 0.403884, 10.25, -0.5, 0.403884, 11.75, 10, 0.403884, 14, 10, 0.403884, 6, 9, 0.403884, 5.25, 3.25, 0.403884, 10, 2.75, 0.403884, 11.5, -2, 0.403884, 9.75, -2, 0.403884, 14, -1, 0.403884, 12.25, -0.5, 0.403884, 10.25, 1, 0.403884, 13.5, 0.5, 0.403884, 14, 10, 0.403884, 14, -0.5, 0.403884, 10.25, -1, 0.403884, 12.25, -0.5, 0.403884, 11.75, 9, 0.403884, 5.25, 2.5, 0.403884, 9.5, 3.25, 0.403884, 10, 1.25, 0.403884, 11, -0.5, 0.403884, 11.75, 1, 0.403884, 12.25, 2.75, 0.403884, 11.5, 1.25, 0.403884, 11, 1, 0.403884, 12.25, 1, 0.403884, 13.5, 10, 0.403884, 14, -11.25, 4.15388, 9.75, -11.25, 4.15388, 14.25, -9.75, 5.15388, 14.25, -9.75, 5.15388, 9.75, -5, 4.90388, 9.75, -5, 4.90388, 14.25, -3.5, 3.90388, 14.25, -3.5, 3.90388, 9.75)
polygons = [PackedInt32Array(1, 0, 2), PackedInt32Array(2, 0, 3), PackedInt32Array(6, 5, 4), PackedInt32Array(8, 7, 9), PackedInt32Array(9, 7, 10), PackedInt32Array(12, 11, 13), PackedInt32Array(13, 11, 16), PackedInt32Array(13, 16, 15), PackedInt32Array(13, 15, 14), PackedInt32Array(19, 18, 17), PackedInt32Array(21, 20, 22), PackedInt32Array(22, 20, 23), PackedInt32Array(25, 24, 26), PackedInt32Array(26, 24, 27), PackedInt32Array(30, 29, 28), PackedInt32Array(33, 32, 31), PackedInt32Array(35, 34, 36), PackedInt32Array(36, 34, 37), PackedInt32Array(39, 38, 40), PackedInt32Array(40, 38, 41), PackedInt32Array(44, 43, 42), PackedInt32Array(48, 47, 45), PackedInt32Array(45, 47, 46), PackedInt32Array(51, 50, 49), PackedInt32Array(53, 52, 54), PackedInt32Array(54, 52, 55), PackedInt32Array(55, 52, 56), PackedInt32Array(56, 52, 57), PackedInt32Array(60, 59, 58), PackedInt32Array(64, 63, 65), PackedInt32Array(65, 63, 66), PackedInt32Array(65, 66, 62), PackedInt32Array(65, 62, 61), PackedInt32Array(70, 69, 67), PackedInt32Array(67, 69, 68), PackedInt32Array(71, 73, 72), PackedInt32Array(75, 74, 76), PackedInt32Array(76, 74, 77), PackedInt32Array(77, 74, 78), PackedInt32Array(80, 79, 81), PackedInt32Array(81, 79, 82), PackedInt32Array(84, 83, 85), PackedInt32Array(85, 83, 88), PackedInt32Array(85, 88, 87), PackedInt32Array(85, 87, 86), PackedInt32Array(90, 89, 91), PackedInt32Array(91, 89, 92), PackedInt32Array(96, 95, 93), PackedInt32Array(93, 95, 94), PackedInt32Array(98, 97, 99), PackedInt32Array(99, 97, 100), PackedInt32Array(103, 102, 101), PackedInt32Array(105, 104, 106), PackedInt32Array(106, 104, 107), PackedInt32Array(110, 109, 108), PackedInt32Array(112, 111, 113), PackedInt32Array(113, 111, 114), PackedInt32Array(116, 115, 117), PackedInt32Array(117, 115, 118), PackedInt32Array(121, 120, 119), PackedInt32Array(124, 123, 122), PackedInt32Array(128, 127, 125), PackedInt32Array(125, 127, 126), PackedInt32Array(129, 131, 130), PackedInt32Array(133, 132, 134), PackedInt32Array(134, 132, 135), PackedInt32Array(139, 138, 136), PackedInt32Array(136, 138, 137), PackedInt32Array(141, 140, 142), PackedInt32Array(142, 140, 143), PackedInt32Array(146, 145, 144), PackedInt32Array(148, 147, 149), PackedInt32Array(149, 147, 150), PackedInt32Array(152, 151, 153), PackedInt32Array(153, 151, 154), PackedInt32Array(156, 155, 157), PackedInt32Array(157, 155, 160), PackedInt32Array(157, 160, 158), PackedInt32Array(158, 160, 159), PackedInt32Array(162, 161, 163), PackedInt32Array(163, 161, 164), PackedInt32Array(165, 167, 166), PackedInt32Array(170, 169, 168), PackedInt32Array(172, 171, 173), PackedInt32Array(173, 171, 174), PackedInt32Array(178, 177, 175), PackedInt32Array(175, 177, 176), PackedInt32Array(181, 180, 182), PackedInt32Array(182, 180, 179), PackedInt32Array(186, 185, 183), PackedInt32Array(183, 185, 184), PackedInt32Array(192, 191, 187), PackedInt32Array(187, 191, 190), PackedInt32Array(187, 190, 189), PackedInt32Array(187, 189, 188), PackedInt32Array(194, 193, 195), PackedInt32Array(195, 193, 196), PackedInt32Array(200, 199, 197), PackedInt32Array(197, 199, 198), PackedInt32Array(205, 204, 201), PackedInt32Array(201, 204, 203), PackedInt32Array(201, 203, 202), PackedInt32Array(210, 209, 206), PackedInt32Array(206, 209, 208), PackedInt32Array(206, 208, 207), PackedInt32Array(213, 212, 211), PackedInt32Array(216, 215, 214), PackedInt32Array(220, 219, 221), PackedInt32Array(221, 219, 217), PackedInt32Array(217, 219, 218), PackedInt32Array(224, 223, 225), PackedInt32Array(225, 223, 226), PackedInt32Array(226, 223, 222), PackedInt32Array(230, 229, 227), PackedInt32Array(227, 229, 228), PackedInt32Array(233, 232, 231), PackedInt32Array(236, 235, 234), PackedInt32Array(239, 238, 237), PackedInt32Array(242, 241, 240), PackedInt32Array(244, 243, 245), PackedInt32Array(245, 243, 246), PackedInt32Array(246, 243, 247), PackedInt32Array(251, 250, 248), PackedInt32Array(248, 250, 249), PackedInt32Array(255, 254, 252), PackedInt32Array(252, 254, 253)]
agent_radius = 0.7

[node name="World" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_r7tp6")

[node name="1" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5.23707, 1, 47)

[node name="2" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -5, 1, 47)

[node name="3" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -6.76293, 1, 38)

[node name="4" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6.23707, 1, 38)

[node name="NavigationRegion3D" type="NavigationRegion3D" parent="."]
navigation_mesh = SubResource("NavigationMesh_qv16l")

[node name="Spruce" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 12.858)

[node name="Spruce2" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.2743, 0, 10.531)

[node name="Spruce3" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.981422, 0, 9.14227)

[node name="Spruce4" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12.8776, 0, 4.3561)

[node name="Spruce5" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12.8776, 0, 0.943969)

[node name="Spruce6" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10.0803, 0, 4.84485)

[node name="GridMap" type="GridMap" parent="NavigationRegion3D" groups=["ground"]]
mesh_library = ExtResource("2_76oo2")
cell_size = Vector3(3, 3, 3)
cell_center_y = false
data = {
"cells": PackedInt32Array(65531, 65522, 1441794, 65531, 65523, 1441794, 65531, 65524, 1441794, 65531, 65525, 1441794, 65531, 65526, 1441794, 65531, 65527, 1441794, 65531, 65528, 1441794, 65531, 65529, 1441794, 65531, 65530, 1441794, 65531, 65531, 1441794, 65531, 65532, 1441794, 65531, 65533, 1441794, 65531, 65534, 1441794, 65531, 65535, 1441794, 65531, 0, 1441794, 65531, 1, 1441794, 65531, 2, 1441794, 65531, 3, 1441794, 65531, 4, 1441794, 65532, 65522, 1441794, 65532, 65523, 1441794, 65532, 65524, 1441794, 65532, 65525, 1441794, 65532, 65526, 1441794, 65532, 65527, 1441794, 65532, 65528, 1441794, 65532, 65529, 1441794, 65532, 65530, 1441794, 65532, 65531, 1441794, 65532, 65532, 1441794, 65532, 65533, 1441794, 65532, 65534, 1441794, 65532, 65535, 1441794, 65532, 0, 1441794, 65532, 1, 1441794, 65532, 2, 1441794, 65532, 3, 1441800, 65532, 4, 8, 65533, 65522, 1441794, 65533, 65523, 1441794, 65533, 65524, 1441794, 65533, 65525, 1441794, 65533, 65526, 1441794, 65533, 65527, 1441794, 65533, 65528, 1441794, 65533, 65529, 1441794, 65533, 65530, 1441794, 65533, 65531, 1441794, 65533, 65532, 1048582, 65533, 65533, 1441795, 65533, 65534, 655366, 65533, 65535, 1441794, 65533, 0, 1441794, 65533, 1, 1441794, 65533, 2, 7, 65533, 4, 3, 65534, 65522, 1441794, 65534, 65523, 1441794, 65534, 65524, 1441794, 65534, 65525, 1441794, 65534, 65526, 1441794, 65534, 65527, 1441794, 65534, 65528, 1441794, 65534, 65529, 1441794, 65534, 65530, 1441794, 65534, 65531, 1441794, 65534, 65532, 6, 65534, 65533, 1048581, 65534, 65534, 1441798, 65534, 65535, 1441794, 65534, 0, 1441794, 65534, 1, 1441794, 65534, 2, 1441794, 65534, 3, 655368, 65534, 4, 1048584, 65535, 65522, 1441794, 65535, 65523, 1441794, 65535, 65524, 1441794, 65535, 65525, 1441794, 65535, 65526, 1441794, 65535, 65527, 1441794, 65535, 65528, 1441794, 65535, 65529, 1441794, 65535, 65530, 1441794, 65535, 65531, 1441794, 65535, 65532, 1441794, 65535, 65533, 1441794, 65535, 65534, 1441794, 65535, 65535, 1441794, 65535, 0, 1441794, 65535, 1, 1441794, 65535, 2, 1441794, 65535, 3, 1441794, 65535, 4, 1441794, 0, 65522, 1441794, 0, 65523, 1441794, 0, 65524, 1441794, 0, 65525, 1441794, 0, 65526, 1441794, 0, 65527, 1441794, 0, 65528, 1441794, 0, 65529, 1441794, 0, 65530, 1441794, 0, 65531, 1441794, 0, 65532, 1441794, 0, 65533, 1441794, 0, 65534, 1441794, 0, 65535, 1441794, 0, 0, 1441794, 0, 1, 1441794, 0, 2, 1441794, 0, 3, 1441794, 0, 4, 1441794, 1, 65522, 1441794, 1, 65523, 1441794, 1, 65524, 1441794, 1, 65525, 1441794, 1, 65526, 1441794, 1, 65527, 1441794, 1, 65528, 1441794, 1, 65529, 1441794, 1, 65530, 1441794, 1, 65531, 1441794, 1, 65532, 1441794, 1, 65533, 1441794, 1, 65534, 1441794, 1, 65535, 1441794, 1, 0, 1441794, 1, 1, 1441794, 1, 2, 1441794, 1, 3, 1441794, 1, 4, 1441794, 2, 65522, 1441794, 2, 65523, 1441794, 2, 65524, 1441794, 2, 65525, 1441794, 2, 65526, 1441794, 2, 65527, 1441794, 2, 65528, 1441794, 2, 65529, 1441794, 2, 65530, 1441794, 2, 65531, 1441794, 2, 65532, 1441794, 2, 65533, 1441794, 2, 65534, 1441794, 2, 65535, 1441794, 2, 0, 1441794, 2, 1, 1441794, 2, 2, 1441794, 2, 3, 1441794, 2, 4, 1441794, 3, 65522, 1441794, 3, 65523, 1441794, 3, 65524, 1441794, 3, 65525, 1441794, 3, 65526, 1441794, 3, 65527, 1441794, 3, 65528, 1441794, 3, 65529, 1441794, 3, 65530, 1441794, 3, 65531, 1441794, 3, 65532, 1441794, 3, 65533, 1441794, 3, 65534, 1441794, 3, 65535, 1441794, 3, 0, 1441794, 3, 1, 1441794, 3, 2, 1441794, 3, 3, 1441794, 3, 4, 1441794, 4, 65522, 1441794, 4, 65523, 1441794, 4, 65524, 1441794, 4, 65525, 1441794, 4, 65526, 1441794, 4, 65527, 1441794, 4, 65528, 1441794, 4, 65529, 1441794, 4, 65530, 1441794, 4, 65531, 1441794, 4, 65532, 1441801, 4, 65533, 1441794, 4, 65534, 1441801, 4, 65535, 1441794, 4, 0, 1441801, 4, 1, 1441794, 4, 2, 1441794, 4, 3, 1441794, 4, 4, 1441794, 5, 65522, 1441794, 5, 65523, 1441794, 5, 65524, 1441794, 5, 65525, 1441794, 5, 65526, 1441794, 5, 65527, 1441794, 5, 65528, 1441794, 5, 65529, 1441794, 5, 65530, 1441794, 5, 65531, 1441794, 5, 65532, 1441794, 5, 65533, 1441794, 5, 65534, 1441794, 5, 65535, 1441794, 5, 0, 1441794, 5, 1, 1441794, 5, 2, 1441794, 5, 3, 1441794, 5, 4, 1441794, 6, 65522, 1441792, 6, 65523, 1441792, 6, 65524, 1441792, 6, 65525, 1441792, 6, 65526, 1441792, 6, 65527, 1441792, 6, 65528, 1441792, 6, 65529, 1441792, 6, 65530, 1441792, 6, 65531, 1441792, 6, 65532, 1441792, 6, 65533, 1441792, 6, 65534, 1441792, 6, 65535, 1441792, 6, 0, 1441792, 6, 1, 1441792, 6, 2, 1441792, 6, 3, 1441792, 6, 4, 1441792, 65530, 65522, 1048576, 65530, 65523, 1048576, 65530, 65524, 1048576, 65530, 65525, 1048576, 65530, 65526, 1048576, 65530, 65527, 1048576, 65530, 65528, 1048576, 65530, 65529, 1048576, 65530, 65530, 1048576, 65530, 65531, 1048576, 65530, 65532, 1048576, 65530, 65533, 1048576, 65530, 65534, 1048576, 65530, 65535, 1048577, 65530, 0, 1048576, 65530, 1, 1048576, 65530, 2, 1048576, 65530, 3, 1048576, 65530, 4, 1048576, 65531, 65521, 0, 65532, 65521, 0, 65533, 65521, 0, 65534, 65521, 0, 65535, 65521, 0, 0, 65521, 0, 1, 65521, 0, 2, 65521, 0, 3, 65521, 0, 4, 65521, 0, 5, 65521, 0, 65531, 5, 655360, 65532, 5, 655360, 65533, 5, 655360, 65534, 5, 655360, 65535, 5, 655360, 0, 5, 655360, 1, 5, 655361, 2, 5, 655360, 3, 5, 655360, 4, 5, 655360, 5, 5, 655360, 131070, 65534, 1441802, 131070, 65533, 1441802, 131070, 65532, 1441802, 131069, 65534, 1048586, 131069, 65533, 1048586, 131069, 65532, 1048586, 131070, 4, 1441802, 131070, 3, 1441802, 131068, 4, 1048586, 131068, 3, 1048586, 131069, 4, 1441801, 131069, 3, 1441801, 131069, 2, 1441805, 196605, 4, 1441805, 196605, 3, 1441805, 65540, 0, 1441805, 65540, 65535, 1441805, 65540, 65534, 1441805, 65540, 65533, 1441805, 65540, 65532, 1441805)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Extras" type="GridMap" parent="NavigationRegion3D"]
mesh_library = ExtResource("2_76oo2")
cell_size = Vector3(3, 3, 3)
cell_center_y = false
data = {
"cells": PackedInt32Array(4, 65535, 1441806, 4, 65533, 1441806)
}

[node name="Player" parent="." instance=ExtResource("2_77a1h")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, -6, 7, -6)

[node name="Enemy2" parent="." node_paths=PackedStringArray("player") instance=ExtResource("4_oa0vr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, -26)
max_energy = 3
attack_range = 10.0
player_path = NodePath("../Player")
player = NodePath("../Player")

[node name="UserInterface" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 1

[node name="CenterContainer" type="CenterContainer" parent="UserInterface"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -32.0
offset_top = -32.0
offset_right = 32.0
offset_bottom = 32.0
grow_horizontal = 2
grow_vertical = 2

[node name="Crosshair" type="TextureRect" parent="UserInterface/CenterContainer"]
layout_mode = 2
texture = ExtResource("3_rhcu6")

[node name="Enemy" parent="." node_paths=PackedStringArray("player") instance=ExtResource("5_rs8k7")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.57635, 4.76837e-07, -14.82)
player_path = NodePath("../Player")
player = NodePath("../Player")

[node name="snowman" parent="." instance=ExtResource("7_6pwac")]
transform = Transform3D(0.443947, 0, 0.896053, 0, 1, 0, -0.896053, 0, 0.443947, -4.62829, 0, 7.68474)
