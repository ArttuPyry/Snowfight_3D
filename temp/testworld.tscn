[gd_scene load_steps=20 format=3 uid="uid://ckdi3myxfa0w0"]

[ext_resource type="MeshLibrary" uid="uid://duaovcsv83fgq" path="res://environment/environment.tres" id="2_76oo2"]
[ext_resource type="PackedScene" uid="uid://def8ntasw0w85" path="res://player.tscn" id="2_77a1h"]
[ext_resource type="PackedScene" uid="uid://cm0gdroi5jb8a" path="res://characters/enemy_basic.tscn" id="4_oa0vr"]
[ext_resource type="Texture2D" uid="uid://cglfvs0avblra" path="res://ui/textures/croshair.png" id="5_1pkr0"]
[ext_resource type="PackedScene" uid="uid://bnxloy30l5bnp" path="res://characters/enemy_with_shovel.tscn" id="5_rs8k7"]
[ext_resource type="PackedScene" uid="uid://cjgf5on2oppby" path="res://environment/spruce.tscn" id="6_6kmmr"]
[ext_resource type="PackedScene" uid="uid://be4khs6jnjhdt" path="res://environment/snowman.tscn" id="7_6pwac"]
[ext_resource type="PackedScene" uid="uid://cn0ypr2lfyvuf" path="res://environment/ladder.tscn" id="8_jnw3q"]
[ext_resource type="PackedScene" uid="uid://dts04t6jmdoi3" path="res://environment/snowman_destroyed.tscn" id="9_eaiee"]

[sub_resource type="Shader" id="Shader_4yrp5"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.1.3.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;

uniform sampler2D cloud_texture00;
uniform sampler2D cloud_texture01;
uniform vec2 cloud_direction00;
uniform vec2 cloud_direction01;
uniform vec2 cloud_scale;
uniform vec2 cloud_distance;
uniform float cloud_speed00;
uniform float cloud_speed01;

void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;
	
	vec2 sky_uv = EYEDIR.xz / EYEDIR.y;
	vec3 clouds = texture(cloud_texture00, (sky_uv * cloud_scale) + (TIME * cloud_direction00 * cloud_speed00 * 0.001)).rgb - texture(cloud_texture01, (sky_uv * cloud_scale) + (TIME * cloud_direction01 * cloud_speed01 * 0.01)).rgb;
	clouds = clamp(clouds, 0.05, 1);
	sky += clouds;
	
	COLOR = mix(ground, sky, step(0.0, EYEDIR.y));
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_35yth"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_jrnty"]
width = 64
height = 64
seamless = true
seamless_blend_skirt = 0.3
noise = SubResource("FastNoiseLite_35yth")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_np7fj"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_gbkce"]
width = 64
height = 64
seamless = true
seamless_blend_skirt = 0.3
noise = SubResource("FastNoiseLite_np7fj")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cbt7x"]
shader = SubResource("Shader_4yrp5")
shader_parameter/sky_top_color = Color(0.756863, 0.8, 0.862745, 1)
shader_parameter/sky_horizon_color = Color(0.646, 0.656, 0.67, 1)
shader_parameter/sky_curve = 0.15
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(1, 1, 1, 1)
shader_parameter/ground_bottom_color = Color(0.772549, 0.85098, 0.894118, 1)
shader_parameter/ground_horizon_color = Color(0.6463, 0.6558, 0.6708, 1)
shader_parameter/ground_curve = 0.02
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.15
shader_parameter/cloud_direction00 = Vector2(-1, 1)
shader_parameter/cloud_direction01 = Vector2(1, -1)
shader_parameter/cloud_scale = Vector2(0.1, 0.1)
shader_parameter/cloud_distance = Vector2(0.1, 0.1)
shader_parameter/cloud_speed00 = 0.1
shader_parameter/cloud_speed01 = 1.0
shader_parameter/cloud_texture00 = SubResource("NoiseTexture2D_jrnty")
shader_parameter/cloud_texture01 = SubResource("NoiseTexture2D_gbkce")

[sub_resource type="Sky" id="Sky_dgl4w"]
sky_material = SubResource("ShaderMaterial_cbt7x")

[sub_resource type="Environment" id="Environment_r7tp6"]
background_mode = 2
sky = SubResource("Sky_dgl4w")
ambient_light_color = Color(1, 1, 1, 1)
tonemap_mode = 2
glow_enabled = true
fog_light_color = Color(1, 1, 1, 1)
fog_density = 0.003

[sub_resource type="NavigationMesh" id="NavigationMesh_qv16l"]
vertices = PackedVector3Array(15.5, 0.5, -15.5, 15.75, 0.5, -13.5, 17.5, 0.5, -13.5, 17.5, 0.5, -20.5, -14.25, 0.5, -11, -9.5, 0.5, -10.75, -9.25, 0.5, -12.5, -14.25, 0.5, -18.75, 17.5, 0.5, -27.5, 17.5, 0.5, -34.5, 9.5, 0.5, -41.25, 1.5, 0.5, -41.25, 11.75, 0.5, -15.5, 15.5, 0.5, -15.5, 17.5, 0.5, -20.5, -6.5, 0.5, -41.25, -14.25, 0.5, -33.75, -14.25, 0.5, -26.25, 2.5, 0.5, -12.75, 2.75, 0.5, -12.25, 11.5, 0.5, -12.25, 11.75, 0.5, -15.5, -14.25, 0.5, -26.25, -9.25, 0.5, -12.5, 2.5, 0.5, -12.75, 17.5, 0.5, -27.5, 1.5, 0.5, -41.25, -6.5, 0.5, -41.25, 17.5, 0.5, -34.5, 17.5, 0.5, -41.25, 9.5, 0.5, -41.25, -6.5, 0.5, -41.25, -14.25, 0.5, -41.25, -14.25, 0.5, -33.75, 11.75, 0.5, -15.5, 17.5, 0.5, -20.5, 17.5, 0.5, -27.5, 2.5, 0.5, -12.75, -14.25, 0.5, -26.25, -14.25, 0.5, -18.75, -9.25, 0.5, -12.5, 15.25, 0.5, -5.25, 13.5, 0.5, -5.25, 13.5, 0.5, -3.5, 15.5, 0.5, -3.5, 17.5, 0.5, -13.5, 15.75, 0.5, -11.75, 15.75, 0.5, -9.25, 15.75, 0.5, -5.75, 15.25, 0.5, -5.25, 15.5, 0.5, -3.5, 17.5, 0.5, -13.5, 15.75, 0.5, -13.5, 15.75, 0.5, -11.75, 15.25, 0.5, -11.25, 13.5, 0.5, -11.25, 13.5, 0.5, -9.5, 15.75, 0.5, -9.25, 15.75, 0.5, -9.25, 15.75, 0.5, -5.75, 17.5, 0.5, -1.5, 17.5, 0.5, -13.5, 15.75, 0.5, -11.75, 15.25, 0.5, -11.25, 15.75, 0.5, -9.25, 15.5, 0.5, -3.5, 15.75, 0.5, -1.5, 17.5, 0.5, -1.5, 15.75, 0.5, -5.75, 11.75, 0.5, -9.5, 13.5, 0.5, -9.5, 13.5, 0.5, -11.25, 11.75, 0.5, -11.25, 2.75, 0.5, -12.25, 2.5, 0.5, -11.25, 2.5, 0.5, -9.75, 11.5, 0.5, -8.5, 11.75, 0.5, -9.5, 11.75, 0.5, -11.25, 2.75, 0.5, -8.75, 11.5, 0.5, -8.5, 11.75, 0.5, -11.25, 11.5, 0.5, -12.25, 2.75, 0.5, -12.25, 2.5, 0.5, -9.75, 2.5, 0.5, -11.25, -1.75, 2.75, -11.5, -1.25, 2.5, -9.25, 2.5, 0.5, -9.75, 1.25, 0.75, -9.58333, -3.25, 3.75, -9, -1.25, 2.5, -9.25, -1.75, 2.75, -11.5, -8.5, 3.75, -11.5, -5.875, 5.25, -10.25, -5.8, 5.25, -11.5, -8.5, 3.75, -3.5, -3.25, 3.75, -3.5, -3.25, 3.75, -9, -8.5, 3.75, -11.5, -5.875, 5.25, -3.5, -5.875, 5.25, -10.25, -14.25, 0.5, 1, -13.75, 0.5, 1, -13.25, 0.5, 0, -14.25, 0.5, -11, -12, 0.5, 0.75, -9, 0.5, -2.25, -9.5, 0.5, -2.5, -12.5, 0.5, 0, -13.25, 0.5, 0, -12.5, 0.5, 0, -9.5, 0.5, -2.5, -9.5, 0.5, -10.75, -14.25, 0.5, -11, -2.5, 0.5, 8.5, -2.25, 0.5, 9.25, -1.75, 0.5, 9, -1.5, 0.5, 8.25, 2.5, 0.5, 9.75, 9.25, 0.5, 5.25, 9.25, 0.5, 4.25, -0.25, 0.5, 9.5, 1.5, 0.5, 10.75, 1.5, 0.5, 10, -0.5, 0.5, 8.25, -0.25, 0.5, 9.5, 1.5, 0.5, 10, 2.5, 0.5, 9.75, 11.5, 0.5, -3.25, 13.5, 0.5, -3.5, 13.5, 0.5, -5.25, 11.5, 0.5, -5.5, 11.5, 0.5, -8.5, 2.75, 0.5, -8.75, 2.5, 0.5, -8.25, 11.5, 0.5, -5.5, -5.25, 0.5, 5.75, -0.5, 0.5, 8.25, 2.5, 0.5, 9.75, -5.25, 0.5, 8.5, -2.5, 0.5, 8.5, -1.5, 0.5, 8.25, -5.25, 0.5, 5.75, 9.25, 0.5, 4.25, 10.5, 0.5, 4, 11.5, 0.5, 0.5, 11.5, 0.5, -3.25, -2.25, 0.5, -2.75, -2.75, 0.5, -2.25, -5.25, 0.5, 5.75, -5.25, 0.5, 5.75, -1.5, 0.5, 8.25, -0.5, 0.5, 8.25, 2.5, 0.5, -8.25, -2.25, 0.5, -8.25, -2.25, 0.5, -2.75, -2.25, 0.5, -2.75, -5.25, 0.5, 5.75, 2.5, 0.5, 9.75, 9.25, 0.5, 4.25, 11.5, 0.5, -5.5, 2.5, 0.5, -8.25, -6.75, 0.5, -2.25, -7, 0.5, 5.5, -5.25, 0.5, 5.75, -2.75, 0.5, -2.25, 9.25, 0.5, 4.25, 11.5, 0.5, -3.25, 11.5, 0.5, -5.5, -13.5, 0.5, 3.5, -13.5, 0.5, 1.75, -13.75, 0.5, 1, -14.25, 0.5, 1, -14.25, 0.5, 4.25, -13.75, 0.5, 4.25, -12.25, 0.5, 3.5, -12, 0.5, 4.75, -9.25, 0.5, 5.5, -12, 0.5, 0.75, -12.25, 0.5, 1.75, -12.25, 0.5, 3.5, -12, 0.5, 0.75, -12.25, 0.5, 3.5, -9.25, 0.5, 5.5, -7, 0.5, 5.5, -6.75, 0.5, -2.25, -9, 0.5, -2.25, -12.25, 0.5, 1.75, -13.5, 0.5, 1.75, -13.5, 0.5, 3.5, -12.25, 0.5, 3.5, 17.5, 0.5, -1.5, 15.75, 0.5, -1.5, 15.75, 0.5, 0.25, 17.5, 0.5, 5, 11.5, 0.5, 0.5, 10.5, 0.5, 4, 11, 0.5, 4.25, 11.5, 0.5, 0.5, 11, 0.5, 4.25, 11, 0.5, 5, 17.5, 0.5, 5, 15.25, 0.5, 0.75, 17.5, 0.5, 5, 15.75, 0.5, 0.25, 15.25, 0.5, 0.75, -13.5, 0.5, 5.25, -13.75, 0.5, 4.25, -14.25, 0.5, 4.25, -9.25, 0.5, 5.5, -12, 0.5, 4.75, -12.25, 0.5, 5.25, -9.25, 0.5, 5.5, -12.25, 0.5, 5.25, -13.5, 0.5, 5.25, -12.5, 0.5, 8.75, -9.5, 0.5, 8.5, -12.5, 0.5, 8.75, -13.5, 0.5, 5.25, -14.25, 0.5, 4.25, -14.25, 0.5, 14.25, -12.5, 0.5, 14.25, 17.5, 0.5, 5, 11, 0.5, 5, 10, 0.5, 5.75, 10, 0.5, 14.25, 17.5, 0.5, 14.25, 0.75, 0.5, 13.5, 0, 0.5, 13.75, 0, 0.5, 14.25, 10, 0.5, 14.25, 2, 0.5, 11.25, 0.75, 0.5, 12.5, 0.75, 0.5, 13.5, 10, 0.5, 14.25, 3, 0.5, 11, 10, 0.5, 14.25, 10, 0.5, 5.75, 9.25, 0.5, 5.25, 3, 0.5, 10, 3, 0.5, 11, 9.25, 0.5, 5.25, 2.5, 0.5, 9.75, 3, 0.5, 10, 0, 0.5, 14.25, 0, 0.5, 13.75, -0.75, 0.5, 13.5, -2.25, 0.5, 14.25, -1.5, 0.5, 10, -1.75, 0.5, 9, -2.25, 0.5, 9.25, 0.5, 0.5, 12, 1.5, 0.5, 10.75, -0.5, 0.5, 10, -1.5, 0.5, 10, -0.75, 0.5, 12.25, 0.5, 0.5, 12, 0.75, 0.5, 12.5, 2, 0.5, 11.25, 1.5, 0.5, 10.75, -2.25, 0.5, 14.25, -0.75, 0.5, 13.5, -0.75, 0.5, 12.25, -1.5, 0.5, 10, -2.25, 0.5, 9.25, 1.5, 0.5, 10.75, -0.25, 0.5, 9.5, -0.5, 0.5, 10, -11.5, 3.75, 9.5, -11.5, 3.75, 14.5, -9.5, 5.25, 14.5, -9.5, 5.25, 9.5, -5.25, 5, 9.5, -5.25, 5, 14.5, -3.25, 3.75, 14.5, -3.25, 3.75, 9.5, -8.25, 0.5, 9.75, -8.25, 0.5, 11.5, -6.5, 0.5, 11.5, -6.5, 0.5, 9.75, -8.25, 3.5, 12.75, -8.25, 3.5, 14.25, -6.5, 3.5, 14.25, -6.5, 3.5, 12.75)
polygons = [PackedInt32Array(1, 0, 2), PackedInt32Array(2, 0, 3), PackedInt32Array(5, 4, 6), PackedInt32Array(6, 4, 7), PackedInt32Array(9, 8, 10), PackedInt32Array(10, 8, 11), PackedInt32Array(14, 13, 12), PackedInt32Array(17, 16, 15), PackedInt32Array(19, 18, 20), PackedInt32Array(20, 18, 21), PackedInt32Array(27, 26, 22), PackedInt32Array(22, 26, 23), PackedInt32Array(23, 26, 24), PackedInt32Array(24, 26, 25), PackedInt32Array(30, 29, 28), PackedInt32Array(33, 32, 31), PackedInt32Array(35, 34, 36), PackedInt32Array(36, 34, 37), PackedInt32Array(40, 39, 38), PackedInt32Array(42, 41, 43), PackedInt32Array(43, 41, 44), PackedInt32Array(47, 46, 45), PackedInt32Array(50, 49, 48), PackedInt32Array(53, 52, 51), PackedInt32Array(55, 54, 56), PackedInt32Array(56, 54, 57), PackedInt32Array(58, 61, 59), PackedInt32Array(59, 61, 60), PackedInt32Array(64, 63, 62), PackedInt32Array(66, 65, 67), PackedInt32Array(67, 65, 68), PackedInt32Array(72, 71, 69), PackedInt32Array(69, 71, 70), PackedInt32Array(75, 74, 73), PackedInt32Array(78, 77, 76), PackedInt32Array(84, 83, 79), PackedInt32Array(79, 83, 82), PackedInt32Array(79, 82, 81), PackedInt32Array(79, 81, 80), PackedInt32Array(88, 89, 85), PackedInt32Array(85, 89, 87), PackedInt32Array(85, 87, 86), PackedInt32Array(93, 95, 94), PackedInt32Array(94, 95, 90), PackedInt32Array(90, 95, 92), PackedInt32Array(90, 92, 91), PackedInt32Array(97, 100, 98), PackedInt32Array(98, 100, 101), PackedInt32Array(101, 100, 96), PackedInt32Array(101, 96, 99), PackedInt32Array(103, 102, 104), PackedInt32Array(104, 102, 105), PackedInt32Array(108, 107, 109), PackedInt32Array(109, 107, 106), PackedInt32Array(111, 110, 112), PackedInt32Array(112, 110, 113), PackedInt32Array(113, 110, 114), PackedInt32Array(116, 115, 117), PackedInt32Array(117, 115, 118), PackedInt32Array(121, 120, 119), PackedInt32Array(124, 123, 122), PackedInt32Array(127, 126, 128), PackedInt32Array(128, 126, 125), PackedInt32Array(130, 129, 131), PackedInt32Array(131, 129, 132), PackedInt32Array(134, 133, 135), PackedInt32Array(135, 133, 136), PackedInt32Array(137, 139, 138), PackedInt32Array(141, 140, 142), PackedInt32Array(142, 140, 143), PackedInt32Array(145, 144, 146), PackedInt32Array(146, 144, 147), PackedInt32Array(150, 149, 148), PackedInt32Array(153, 152, 151), PackedInt32Array(156, 155, 154), PackedInt32Array(162, 161, 157), PackedInt32Array(157, 161, 160), PackedInt32Array(157, 160, 159), PackedInt32Array(157, 159, 158), PackedInt32Array(164, 163, 165), PackedInt32Array(165, 163, 166), PackedInt32Array(169, 168, 167), PackedInt32Array(175, 174, 170), PackedInt32Array(170, 174, 171), PackedInt32Array(171, 174, 172), PackedInt32Array(172, 174, 173), PackedInt32Array(178, 177, 176), PackedInt32Array(181, 180, 179), PackedInt32Array(184, 183, 185), PackedInt32Array(185, 183, 182), PackedInt32Array(185, 182, 187), PackedInt32Array(185, 187, 186), PackedInt32Array(191, 190, 188), PackedInt32Array(188, 190, 189), PackedInt32Array(193, 192, 194), PackedInt32Array(194, 192, 195), PackedInt32Array(197, 196, 198), PackedInt32Array(200, 199, 201), PackedInt32Array(201, 199, 203), PackedInt32Array(201, 203, 202), PackedInt32Array(206, 205, 204), PackedInt32Array(209, 208, 207), PackedInt32Array(212, 211, 210), PackedInt32Array(215, 214, 216), PackedInt32Array(216, 214, 217), PackedInt32Array(217, 214, 213), PackedInt32Array(219, 218, 220), PackedInt32Array(220, 218, 222), PackedInt32Array(220, 222, 221), PackedInt32Array(224, 223, 225), PackedInt32Array(225, 223, 226), PackedInt32Array(226, 223, 227), PackedInt32Array(229, 228, 230), PackedInt32Array(230, 228, 231), PackedInt32Array(233, 232, 234), PackedInt32Array(234, 232, 236), PackedInt32Array(234, 236, 235), PackedInt32Array(241, 240, 237), PackedInt32Array(237, 240, 238), PackedInt32Array(238, 240, 239), PackedInt32Array(244, 243, 242), PackedInt32Array(246, 245, 247), PackedInt32Array(247, 245, 248), PackedInt32Array(249, 251, 250), PackedInt32Array(252, 256, 253), PackedInt32Array(253, 256, 254), PackedInt32Array(254, 256, 255), PackedInt32Array(260, 259, 257), PackedInt32Array(257, 259, 258), PackedInt32Array(262, 261, 263), PackedInt32Array(263, 261, 264), PackedInt32Array(264, 261, 265), PackedInt32Array(268, 267, 266), PackedInt32Array(272, 271, 269), PackedInt32Array(269, 271, 270), PackedInt32Array(276, 275, 273), PackedInt32Array(273, 275, 274), PackedInt32Array(280, 279, 277), PackedInt32Array(277, 279, 278), PackedInt32Array(284, 283, 281), PackedInt32Array(281, 283, 282)]

[sub_resource type="CylinderMesh" id="CylinderMesh_jjgmf"]
top_radius = 0.2
bottom_radius = 0.2

[node name="World" type="Node3D" groups=["world"]]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_r7tp6")

[node name="1" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5.23707, 1, 47)

[node name="2" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -5, 1, 47)

[node name="3" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -6.76293, 1, 38)

[node name="4" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6.23707, 1, 38)

[node name="NavigationRegion3D" type="NavigationRegion3D" parent="."]
navigation_mesh = SubResource("NavigationMesh_qv16l")

[node name="Spruce" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 12.858)

[node name="Spruce2" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.2743, 0, 10.531)

[node name="Spruce3" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.981422, 0, 9.14227)

[node name="Spruce4" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12.8776, 0, 4.3561)

[node name="Spruce5" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12.8776, 0, 0.943969)

[node name="Spruce6" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10.0803, 0, 4.84485)

[node name="GridMap" type="GridMap" parent="NavigationRegion3D" groups=["ground"]]
mesh_library = ExtResource("2_76oo2")
cell_size = Vector3(3, 3, 3)
cell_center_y = false
data = {
"cells": PackedInt32Array(65531, 65522, 1441794, 65531, 65523, 1441794, 65531, 65524, 1441794, 65531, 65525, 1441794, 65531, 65526, 1441794, 65531, 65527, 1441794, 65531, 65528, 1441794, 65531, 65529, 1441794, 65531, 65530, 1441794, 65531, 65531, 1441794, 65531, 65532, 1441794, 65531, 65533, 1441794, 65531, 65534, 1441794, 65531, 65535, 1441794, 65531, 0, 1441794, 65531, 1, 1441794, 65531, 2, 1441794, 65531, 3, 1441794, 65531, 4, 1441794, 65532, 65522, 1441794, 65532, 65523, 1441794, 65532, 65524, 1441794, 65532, 65525, 1441794, 65532, 65526, 1441794, 65532, 65527, 1441794, 65532, 65528, 1441794, 65532, 65529, 1441794, 65533, 65522, 1441794, 65533, 65523, 1441794, 65533, 65524, 1441794, 65533, 65525, 1441794, 65533, 65526, 1441794, 65533, 65527, 1441794, 65533, 65528, 1441794, 65533, 65529, 1441794, 65534, 65522, 1441794, 65534, 65523, 1441794, 65534, 65524, 1441794, 65534, 65525, 1441794, 65534, 65526, 1441794, 65534, 65527, 1441794, 65534, 65528, 1441794, 65534, 65529, 1441794, 65535, 65522, 1441794, 65535, 65523, 1441794, 65535, 65524, 1441794, 65535, 65525, 1441794, 65535, 65526, 1441794, 65535, 65527, 1441794, 65535, 65528, 1441794, 65535, 65529, 1441794, 0, 65522, 1441794, 0, 65523, 1441794, 0, 65524, 1441794, 0, 65525, 1441794, 0, 65526, 1441794, 0, 65527, 1441794, 0, 65528, 1441794, 0, 65529, 1441794, 1, 65522, 1441794, 1, 65523, 1441794, 1, 65524, 1441794, 1, 65525, 1441794, 1, 65526, 1441794, 1, 65527, 1441794, 1, 65528, 1441794, 1, 65529, 1441794, 2, 65522, 1441794, 2, 65523, 1441794, 2, 65524, 1441794, 2, 65525, 1441794, 2, 65526, 1441794, 2, 65527, 1441794, 2, 65528, 1441794, 2, 65529, 1441794, 3, 65522, 1441794, 3, 65523, 1441794, 3, 65524, 1441794, 3, 65525, 1441794, 3, 65526, 1441794, 3, 65527, 1441794, 3, 65528, 1441794, 3, 65529, 1441794, 4, 65522, 1441794, 4, 65523, 1441794, 4, 65524, 1441794, 4, 65525, 1441794, 4, 65526, 1441794, 4, 65527, 1441794, 4, 65528, 1441794, 4, 65529, 1441794, 5, 65522, 1441794, 5, 65523, 1441794, 5, 65524, 1441794, 5, 65525, 1441794, 5, 65526, 1441794, 5, 65527, 1441794, 5, 65528, 1441794, 5, 65529, 1441794, 5, 65530, 1441794, 5, 65531, 1441794, 5, 65532, 1441794, 5, 65533, 1441794, 5, 65534, 1441794, 5, 65535, 1441794, 5, 0, 1441794, 5, 1, 1441794, 5, 2, 1441794, 5, 3, 1441794, 5, 4, 1441794, 6, 65522, 1441792, 6, 65523, 1441792, 6, 65524, 1441792, 6, 65525, 1441792, 6, 65526, 1441792, 6, 65527, 1441792, 6, 65528, 1441792, 6, 65529, 1441792, 6, 65530, 1441792, 6, 65531, 1441792, 6, 65532, 1441792, 6, 65533, 1441792, 6, 65534, 1441792, 6, 65535, 1441792, 6, 0, 1441792, 6, 1, 1441792, 6, 2, 1441792, 6, 3, 1441792, 6, 4, 1441792, 65530, 65522, 1048576, 65530, 65523, 1048576, 65530, 65524, 1048576, 65530, 65525, 1048576, 65530, 65526, 1048576, 65530, 65527, 1048576, 65530, 65528, 1048576, 65530, 65529, 1048576, 65530, 65530, 1048576, 65530, 65531, 1048576, 65530, 65532, 1048576, 65530, 65533, 1048576, 65530, 65534, 1048576, 65530, 65535, 1048577, 65530, 0, 1048576, 65530, 1, 1048576, 65530, 2, 1048576, 65530, 3, 1048576, 65530, 4, 1048576, 65531, 65521, 0, 65532, 65521, 0, 65533, 65521, 0, 65534, 65521, 0, 65535, 65521, 0, 0, 65521, 0, 1, 65521, 0, 2, 65521, 0, 3, 65521, 0, 4, 65521, 0, 5, 65521, 0, 65531, 5, 655360, 65532, 5, 655360, 65533, 5, 655360, 65534, 5, 655360, 65535, 5, 655360, 0, 5, 655360, 1, 5, 655361, 2, 5, 655360, 3, 5, 655360, 4, 5, 655360, 5, 5, 655360, 65532, 65530, 2, 65532, 65531, 2, 65532, 65532, 2, 65532, 65533, 2, 65532, 65534, 2, 65532, 65535, 2, 65532, 0, 2, 65532, 1, 2, 65532, 2, 2, 65532, 3, 655363, 65532, 4, 1441795, 65533, 65530, 2, 65533, 65531, 2, 65533, 65532, 655363, 65533, 65533, 655363, 65533, 65534, 1441795, 65533, 65535, 2, 65533, 0, 2, 65533, 1, 2, 65533, 2, 3, 65533, 3, 2, 65533, 4, 1048579, 65534, 65530, 2, 65534, 65531, 2, 65534, 65532, 1048579, 65534, 65533, 1441795, 65534, 65534, 3, 65534, 65535, 2, 65534, 0, 2, 65534, 1, 2, 65534, 2, 2, 65534, 3, 1048579, 65534, 4, 3, 65535, 65530, 2, 65535, 65531, 2, 65535, 65532, 1441799, 65535, 65533, 2, 65535, 65534, 2, 65535, 65535, 2, 65535, 0, 2, 65535, 1, 2, 65535, 2, 2, 65535, 3, 2, 65535, 4, 2, 0, 65530, 2, 0, 65531, 2, 0, 65532, 2, 0, 65533, 2, 0, 65534, 2, 0, 65535, 2, 0, 0, 2, 0, 1, 2, 0, 2, 2, 0, 3, 2, 0, 4, 2, 1, 65530, 2, 1, 65531, 2, 1, 65532, 2, 1, 65533, 2, 1, 65534, 2, 1, 65535, 2, 1, 0, 2, 1, 1, 2, 1, 2, 2, 1, 3, 2, 1, 4, 2, 2, 65530, 2, 2, 65531, 2, 2, 65532, 2, 2, 65533, 2, 2, 65534, 2, 2, 65535, 2, 2, 0, 2, 2, 1, 2, 2, 2, 2, 2, 3, 2, 2, 4, 2, 3, 65530, 2, 3, 65531, 2, 3, 65532, 2, 3, 65533, 2, 3, 65534, 2, 3, 65535, 2, 3, 0, 2, 3, 1, 2, 3, 2, 2, 3, 3, 2, 3, 4, 2, 4, 65530, 2, 4, 65531, 1048580, 4, 65532, 2, 4, 65533, 1048580, 4, 65534, 2, 4, 65535, 1048580, 4, 0, 2, 4, 1, 2, 4, 2, 2, 4, 3, 2, 4, 4, 2, 131069, 4, 1048580, 131069, 3, 1048580, 131069, 2, 1048581, 131070, 4, 1441798, 131070, 3, 1441798, 131068, 4, 1048582, 131068, 3, 1048582, 196605, 4, 1048581, 196605, 3, 1048581, 131070, 65534, 1441798, 131070, 65533, 1441798, 131070, 65532, 1441798, 131069, 65534, 1048582, 131069, 65533, 1048582, 131069, 65532, 1048582, 65540, 65535, 1048581, 65540, 65534, 1048581, 65540, 65533, 1048581, 65540, 65532, 1048581, 65540, 65531, 1048581)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="StairFix" type="MeshInstance3D" parent="NavigationRegion3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.94606, 0, -8.99311)
visible = false
mesh = SubResource("CylinderMesh_jjgmf")

[node name="StairFix2" type="MeshInstance3D" parent="NavigationRegion3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.94606, 0, -11.9722)
visible = false
mesh = SubResource("CylinderMesh_jjgmf")

[node name="Player" parent="." instance=ExtResource("2_77a1h")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, -1.5075, 7, -3.98143)
max_snowball_count = 999

[node name="Enemy2" parent="." node_paths=PackedStringArray("player") instance=ExtResource("4_oa0vr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, -26)
max_energy = 3
attack_range = 10.0
player_path = NodePath("../Player")
player = NodePath("../Player")

[node name="UserInterface" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 1

[node name="CenterContainer" type="CenterContainer" parent="UserInterface"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -32.0
offset_top = -32.0
offset_right = 32.0
offset_bottom = 32.0
grow_horizontal = 2
grow_vertical = 2

[node name="Crosshair" type="TextureRect" parent="UserInterface/CenterContainer"]
layout_mode = 2
texture = ExtResource("5_1pkr0")

[node name="Enemy" parent="." node_paths=PackedStringArray("player") instance=ExtResource("5_rs8k7")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.57635, 4.76837e-07, -14.82)
skin = 3
player_path = NodePath("../Player")
player = NodePath("../Player")

[node name="Enemy3" parent="." node_paths=PackedStringArray("player") instance=ExtResource("5_rs8k7")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.42365, 4.76837e-07, -19.82)
skin = 5
player_path = NodePath("../Player")
player = NodePath("../Player")

[node name="snowman" parent="." instance=ExtResource("7_6pwac")]
transform = Transform3D(0.443947, 0, 0.896053, 0, 1, 0, -0.896053, 0, 0.443947, -4.62829, 0, 7.68474)

[node name="GPUParticlesCollisionBox3D" type="GPUParticlesCollisionBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 13.5011, 3.1993, -7.51254)
size = Vector3(3, 0.3, 15)

[node name="Ladder" parent="." instance=ExtResource("8_jnw3q")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.86571, 0, -6)

[node name="snowman_destroyed" parent="." instance=ExtResource("9_eaiee")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2, 0, -4)
