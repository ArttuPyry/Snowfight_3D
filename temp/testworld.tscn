[gd_scene load_steps=20 format=3 uid="uid://ckdi3myxfa0w0"]

[ext_resource type="MeshLibrary" uid="uid://duaovcsv83fgq" path="res://environment/environment.tres" id="2_76oo2"]
[ext_resource type="PackedScene" uid="uid://def8ntasw0w85" path="res://player.tscn" id="2_77a1h"]
[ext_resource type="PackedScene" uid="uid://b4j3icq8jyte1" path="res://environment/stair_fix.tscn" id="3_6e31e"]
[ext_resource type="PackedScene" uid="uid://cm0gdroi5jb8a" path="res://characters/enemy_basic.tscn" id="4_oa0vr"]
[ext_resource type="PackedScene" uid="uid://bnxloy30l5bnp" path="res://characters/enemy_with_shovel.tscn" id="5_rs8k7"]
[ext_resource type="PackedScene" uid="uid://cjgf5on2oppby" path="res://environment/spruce.tscn" id="6_6kmmr"]
[ext_resource type="PackedScene" uid="uid://b4up88kqplgm" path="res://ui/user_interface.tscn" id="6_d1k1r"]
[ext_resource type="PackedScene" uid="uid://be4khs6jnjhdt" path="res://environment/snowman.tscn" id="7_6pwac"]
[ext_resource type="PackedScene" uid="uid://cn0ypr2lfyvuf" path="res://environment/ladder.tscn" id="8_jnw3q"]
[ext_resource type="PackedScene" uid="uid://dts04t6jmdoi3" path="res://environment/snowman_destroyed.tscn" id="9_eaiee"]

[sub_resource type="Shader" id="Shader_yk8oj"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.1.3.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;

uniform sampler2D cloud_texture00;
uniform sampler2D cloud_texture01;
uniform vec2 cloud_direction00;
uniform vec2 cloud_direction01;
uniform vec2 cloud_scale;
uniform vec2 cloud_distance;
uniform float cloud_speed00;
uniform float cloud_speed01;

void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;
	
	vec2 sky_uv = EYEDIR.xz / EYEDIR.y;
	vec3 clouds = texture(cloud_texture00, (sky_uv * cloud_scale) + (TIME * cloud_direction00 * cloud_speed00 * 0.001)).rgb - texture(cloud_texture01, (sky_uv * cloud_scale) + (TIME * cloud_direction01 * cloud_speed01 * 0.01)).rgb;
	clouds = clamp(clouds, 0.05, 1);
	sky += clouds;
	
	COLOR = mix(ground, sky, step(0.0, EYEDIR.y));
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_35yth"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_7r4xh"]
width = 64
height = 64
seamless = true
seamless_blend_skirt = 0.3
noise = SubResource("FastNoiseLite_35yth")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_np7fj"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_yudgp"]
width = 64
height = 64
seamless = true
seamless_blend_skirt = 0.3
noise = SubResource("FastNoiseLite_np7fj")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cbt7x"]
shader = SubResource("Shader_yk8oj")
shader_parameter/sky_top_color = Color(0.756863, 0.8, 0.862745, 1)
shader_parameter/sky_horizon_color = Color(0.646, 0.656, 0.67, 1)
shader_parameter/sky_curve = 0.15
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(1, 1, 1, 1)
shader_parameter/ground_bottom_color = Color(0.772549, 0.85098, 0.894118, 1)
shader_parameter/ground_horizon_color = Color(0.6463, 0.6558, 0.6708, 1)
shader_parameter/ground_curve = 0.02
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.15
shader_parameter/cloud_direction00 = Vector2(-1, 1)
shader_parameter/cloud_direction01 = Vector2(1, -1)
shader_parameter/cloud_scale = Vector2(0.1, 0.1)
shader_parameter/cloud_distance = Vector2(0.1, 0.1)
shader_parameter/cloud_speed00 = 0.1
shader_parameter/cloud_speed01 = 1.0
shader_parameter/cloud_texture00 = SubResource("NoiseTexture2D_7r4xh")
shader_parameter/cloud_texture01 = SubResource("NoiseTexture2D_yudgp")

[sub_resource type="Sky" id="Sky_sj3r5"]
sky_material = SubResource("ShaderMaterial_cbt7x")

[sub_resource type="Environment" id="Environment_r7tp6"]
background_mode = 2
sky = SubResource("Sky_sj3r5")
ambient_light_color = Color(1, 1, 1, 1)
tonemap_mode = 2
glow_enabled = true
fog_light_color = Color(1, 1, 1, 1)
fog_density = 0.003

[sub_resource type="NavigationMesh" id="NavigationMesh_qv16l"]
vertices = PackedVector3Array(12.5, 4.5, -27, 14.5, 4.5, -27, 14.75, 3.5, -34, 12.5, 3.5, -34.25, 12.5, 3.5, -29.9, 14.6, 3.5, -29.8, 14.75, 3.5, -41.5, 12.5, 3.5, -41.5, 12.5, 3.5, -34.25, 14.75, 3.5, -34, -14.5, 3.5, -38.5, -14.5, 3.5, -36.75, -11.75, 3.25, -36.25, -4, 0.5, -36.5, -7.5, 0.75, -38.5, -11.7, 3.25, -38.5, -6.58333, 0.5, -36.4167, -7.5, 0.5, -39.5, -7.5, 0.75, -38.5, -4, 0.5, -36.5, -3.75, 0.5, -41.25, -14.25, 0.5, -41.25, -14.25, 0.5, -39.5, -7.5, 0.5, -39.5, -3.75, 0.5, -41.25, 7.75, 0.5, -23.5, 8.5, 0.5, -23.5, 8.5, 0.5, -24.25, 7.5, 0.5, -24.5, 5.75, 0.5, -24.5, 8.5, 0.5, -25.5, 8.5, 0.5, -27.25, 4.5, 0.5, -24.5, 10.5, 0.5, -27.5, 10.75, 0.5, -27, 11.5, 0.5, -27, 11.5, 0.5, -34.25, 1.5, 0.5, -24.5, 1.75, 0.5, -23.5, 2.5, 0.5, -23.5, 2.75, 0.5, -24.5, 2.75, 0.5, -24.5, 4.5, 0.5, -24.5, 8.5, 0.5, -27.25, 4.5, 0.5, -24.5, 4.75, 0.5, -23.5, 5.5, 0.5, -23.5, 5.75, 0.5, -24.5, -2.25, 0.5, -26.75, 1.5, 0.5, -24.5, 2.75, 0.5, -24.5, 8.5, 0.5, -24.25, 9.5, 0.5, -24.5, 9.5, 0.5, -25.25, 8.5, 0.5, -25.5, 7.5, 0.5, -24.5, -3.75, 0.5, -41.25, -4, 0.5, -36.5, -2.25, 0.5, -36.25, 3.75, 0.5, -41.25, 11.5, 0.5, -34.25, 11.5, 0.5, -41.25, 3.75, 0.5, -41.25, -3.75, 0.5, -26.25, -3.75, 0.5, -25.5, -2.5, 0.5, -25.5, -2.25, 0.5, -26.75, -2.25, 0.5, -26.75, 2.75, 0.5, -24.5, 8.5, 0.5, -27.25, 11.5, 0.5, -34.25, 3.75, 0.5, -41.25, -2.25, 0.5, -36.25, -2.25, 0.5, -24.25, -0.5, 0.5, -24, -0.25, 0.5, -24.5, -2.5, 0.5, -25.5, 8.5, 0.5, -27.25, 10.5, 0.5, -27.5, 11.5, 0.5, -34.25, 5.75, 0.5, -24.5, 7.5, 0.5, -24.5, 8.5, 0.5, -25.5, -2.25, 0.5, -26.75, -2.5, 0.5, -25.5, -0.25, 0.5, -24.5, 1.5, 0.5, -24.5, 15.75, 0.5, -26.75, 15, 0.5, -26.25, 16.5, 0.5, -26, 15.75, 0.5, -26.75, 16.5, 0.5, -26, 16.5, 0.5, -27.25, 15.75, 0.5, -34, 17.5, 0.5, -34.5, 17.5, 0.5, -41.25, 15.75, 0.5, -41.25, 15.75, 0.5, -34, 15.75, 0.5, -34, 16.5, 0.5, -27.25, 17.5, 0.5, -27.5, 17.5, 0.5, -34.5, -8.5, 3.75, -28.25, -8.5, 4.25, -27.5, -6.5, 4.25, -27.5, -6.25, 3.75, -28.5, -6.25, 3.75, -28.5, -5.5, 3.5, -28.5, -3.25, 3.5, -35.5, -5.5, 3.5, -28.5, -5.25, 3.5, -27.5, -3.25, 3.5, -27.5, -3.25, 3.5, -35.5, -11.75, 3.5, -35.5, -11.75, 3.25, -36.25, -14.5, 3.5, -36.75, -9.5, 3.5, -28.25, -8.5, 3.75, -28.25, -6.25, 3.75, -28.5, -3.25, 3.5, -35.5, -11.75, 3.5, -35.5, -14.5, 3.5, -26.25, -9.5, 3.5, -26.25, -9.5, 3.5, -28.25, -11.75, 3.5, -35.5, -14.5, 3.5, -36.75, -6.25, 4.5, -26.5, -6.5, 4.25, -27.5, -8.5, 4.25, -27.5, -3.25, 4.5, -23.5, -3.5, 4.5, -26.5, -6.25, 4.5, -26.5, -8.5, 4.5, -18.5, -3.5, 4.5, -18.5, -3.25, 4.5, -21.5, -3.25, 4.5, -23.5, -6.25, 4.5, -26.5, -8.5, 4.25, -27.5, 7.25, 4.5, -21.5, 7.25, 4.5, -23.5, -3.25, 4.5, -23.5, -3.25, 4.5, -21.5, 11.75, 0.5, -26.25, 11.5, 0.5, -27, 10.75, 0.5, -27, 10.75, 0.5, -25.75, 17.5, 0.5, -19.5, 17.5, 0.5, -25.25, 16.75, 0.5, -25.25, 9.5, 0.5, -25.25, 9.5, 0.5, -24.5, 10.75, 0.5, -24.25, 10.75, 0.5, -25.75, 11.75, 0.5, -26.25, 10.75, 0.5, -24.25, 10.75, 0.5, -22.75, 16.75, 0.5, -25.25, 16.5, 0.5, -26, 15, 0.5, -26.25, 11.75, 0.5, -26.25, 11.75, 0.5, -26.25, 10.75, 0.5, -25.75, 10.75, 0.5, -24.25, 10.75, 0.5, -17.75, 10.25, 0.5, -17.25, 12, 0.5, -15.5, 15.5, 0.5, -15.5, 15.75, 0.5, -13.5, 17.5, 0.5, -13.5, 17.5, 0.5, -17.25, 16.5, 0.5, -17.5, 15.5, 0.5, -15.5, 16.5, 0.5, -17.5, 16.5, 0.5, -19.25, 10.75, 0.5, -19.25, 10.75, 0.5, -17.75, 12, 0.5, -15.5, 16.5, 0.5, -19.25, 17.5, 0.5, -19.5, 16.75, 0.5, -25.25, 11.75, 0.5, -26.25, 10.75, 0.5, -22.75, 10.75, 0.5, -19.25, 9.5, 0.5, -22.25, 9.5, 0.5, -19.5, 10.75, 0.5, -19.25, 10.75, 0.5, -22.75, 14.75, 4.5, -26.5, 14.5, 4.5, -27, 12.5, 4.5, -27, 12.25, 4.5, -26.5, 14.75, 4.5, -26.5, 12.25, 4.5, -26.5, 9.5, 4.5, -23.75, 9.5, 4.5, -21.25, 7.25, 4.5, -23.5, 7.25, 4.5, -21.5, 9.5, 4.5, -21.25, 9.5, 4.5, -23.75, 14.75, 4.5, -26.5, 9.5, 4.5, -21.25, 9.5, 4.5, -18.5, 17.5, 4.5, -18.5, 17.5, 4.5, -26.5, 12.25, 4.5, -26.5, 9.5, 4.5, -26.5, 9.5, 4.5, -23.75, -9.5, 3.5, -26.25, -14.5, 3.5, -26.25, -14.5, 3.5, -18.25, -9.5, 3.5, -18.25, -8.25, 0.5, -18.75, -7.5, 0.5, -18.75, -7.25, 0.5, -19.5, -4.5, 0.5, -25.25, -3.75, 0.5, -25.5, -3.75, 0.5, -26.25, -8.25, 0.5, -26.25, -5.5, 0.5, -19.5, -5.25, 0.5, -18.25, -4.5, 0.5, -18.25, -4.25, 0.5, -19.5, -4.25, 0.5, -23.25, -7.25, 0.5, -19.5, -5.5, 0.5, -19.5, -4.25, 0.5, -23.25, -0.5, 0.5, -24, -2.25, 0.5, -24.25, -2.75, 0.5, -23.25, -0.5, 0.5, -22.5, -4.25, 0.5, -23.25, -4.5, 0.5, -25.25, -8.25, 0.5, -26.25, -8.25, 0.5, -18.75, -7.25, 0.5, -19.5, 0, 0.5, -22.25, -0.5, 0.5, -22.5, -2.75, 0.5, -23.25, -4.25, 0.5, -23.25, -4.25, 0.5, -19.5, -2.5, 0.5, -19.5, -2.5, 0.5, -19.5, -2.25, 0.5, -19, 0, 0.5, -22.25, 8.5, 0.5, -22.5, 8.5, 0.5, -23.5, 7.75, 0.5, -23.5, 7.25, 0.5, -22.25, 1.25, 0.5, -22.25, 0, 0.5, -22.25, -2.25, 0.5, -19, 5.75, 0.5, -22.25, 5.5, 0.5, -23.5, 4.75, 0.5, -23.5, 4.25, 0.5, -22.25, 1.25, 0.5, -22.25, -2.25, 0.5, -19, -2.25, 0.5, -17.75, 2.75, 0.5, -22.25, 2.75, 0.5, -22.25, 2.5, 0.5, -23.5, 1.75, 0.5, -23.5, 1.25, 0.5, -22.25, 8.5, 0.5, -19.25, 5.75, 0.5, -22.25, 4.25, 0.5, -22.25, 8.5, 0.5, -17.5, 9.5, 0.5, -22.25, 8.5, 0.5, -22.5, 7.25, 0.5, -22.25, 8.5, 0.5, -19.25, 9.5, 0.5, -19.5, 2.25, 0.5, -12.75, 9, 0.5, -17.25, 8.5, 0.5, -17.5, -2.25, 0.5, -17.75, -2.25, 0.5, -12.5, 2.25, 0.5, -12.75, 8.5, 0.5, -17.5, 4.25, 0.5, -22.25, 2.75, 0.5, -22.25, 8.5, 0.5, -19.25, 7.25, 0.5, -22.25, 5.75, 0.5, -22.25, -4.25, 0.5, -17.25, -4.5, 0.5, -18.25, -5.25, 0.5, -18.25, -4.25, 0.5, -17.25, -5.25, 0.5, -18.25, -5.75, 0.5, -17.25, -2.25, 0.5, -12.5, -7.25, 0.5, -17.25, -7.5, 0.5, -18.75, -8.25, 0.5, -18.75, -8.75, 0.5, -17.25, -9.5, 0.5, -12.25, -9.5, 0.5, -12.25, -2.25, 0.5, -12.5, -5.75, 0.5, -17.25, -7.25, 0.5, -17.25, -2.25, 0.5, -12.5, -2.25, 0.5, -17.75, -2.75, 0.5, -17.25, -8.75, 0.5, -17.25, -9.75, 0.5, -17.25, -9.5, 0.5, -12.25, -2.25, 0.5, -12.5, -2.75, 0.5, -17.25, -4.25, 0.5, -17.25, -14.25, 0.5, -11, -9.5, 0.5, -10.75, -9.5, 0.5, -12.25, -9.75, 0.5, -17.25, -14.25, 0.5, -17.25, 11.5, 0.5, -15.25, 12, 0.5, -15.5, 10.25, 0.5, -17.25, 11.5, 0.5, -15.25, 10.25, 0.5, -17.25, 9, 0.5, -17.25, 2.75, 0.5, -12.5, 2.75, 0.5, -11.5, 11.5, 0.5, -11.5, 9, 0.5, -17.25, 2.25, 0.5, -12.75, 2.75, 0.5, -12.5, 15.25, 0.5, -5.25, 13.5, 0.5, -5.25, 13.5, 0.5, -3.5, 15.5, 0.5, -3.5, 17.5, 0.5, -13.5, 15.75, 0.5, -11.75, 15.75, 0.5, -9.25, 15.75, 0.5, -5.75, 15.25, 0.5, -5.25, 15.5, 0.5, -3.5, 17.5, 0.5, -13.5, 15.75, 0.5, -13.5, 15.75, 0.5, -11.75, 15.25, 0.5, -11.25, 13.5, 0.5, -11.25, 13.5, 0.5, -9.5, 15.75, 0.5, -9.25, 15.75, 0.5, -9.25, 15.75, 0.5, -5.75, 17.5, 0.5, -1.5, 17.5, 0.5, -13.5, 15.75, 0.5, -11.75, 15.25, 0.5, -11.25, 15.75, 0.5, -9.25, 15.5, 0.5, -3.5, 15.75, 0.5, -1.5, 17.5, 0.5, -1.5, 15.75, 0.5, -5.75, 11.75, 0.5, -9.5, 13.5, 0.5, -9.5, 13.5, 0.5, -11.25, 11.5, 0.5, -11.5, 2.75, 0.5, -11.5, -1.75, 2.75, -11.5, -1.25, 2.5, -9.25, 2.5, 0.5, -9.75, 1.25, 0.75, -9.58333, 2.75, 0.5, -8.75, 11.5, 0.5, -8.5, 11.75, 0.5, -9.5, 11.5, 0.5, -11.5, 2.75, 0.5, -11.5, 2.5, 0.5, -9.75, -3.25, 3.75, -9, -1.25, 2.5, -9.25, -1.75, 2.75, -11.5, -8.5, 3.75, -11.5, -5.875, 5.25, -10.25, -5.8, 5.25, -11.5, -8.5, 3.75, -3.5, -3.25, 3.75, -3.5, -3.25, 3.75, -9, -8.5, 3.75, -11.5, -5.875, 5.25, -3.5, -5.875, 5.25, -10.25, -14.25, 0.5, 1, -13.75, 0.5, 1, -13.25, 0.5, 0, -14.25, 0.5, -11, -12, 0.5, 0.75, -9, 0.5, -2.25, -9.5, 0.5, -2.5, -12.5, 0.5, 0, -13.25, 0.5, 0, -12.5, 0.5, 0, -9.5, 0.5, -2.5, -9.5, 0.5, -10.75, -14.25, 0.5, -11, -2.5, 0.5, 8.5, -2.25, 0.5, 9.25, -1.75, 0.5, 9, -1.5, 0.5, 8.25, 2.5, 0.5, 9.75, 9.25, 0.5, 5.25, 9.25, 0.5, 4.25, -0.25, 0.5, 9.5, 1.5, 0.5, 10.75, 1.5, 0.5, 10, -0.5, 0.5, 8.25, -0.25, 0.5, 9.5, 1.5, 0.5, 10, 2.5, 0.5, 9.75, 11.5, 0.5, -3.25, 13.5, 0.5, -3.5, 13.5, 0.5, -5.25, 11.5, 0.5, -5.5, 11.5, 0.5, -8.5, 2.75, 0.5, -8.75, 2.5, 0.5, -8.25, 11.5, 0.5, -5.5, -5.25, 0.5, 5.75, -0.5, 0.5, 8.25, 2.5, 0.5, 9.75, -5.25, 0.5, 8.5, -2.5, 0.5, 8.5, -1.5, 0.5, 8.25, -5.25, 0.5, 5.75, 9.25, 0.5, 4.25, 10.5, 0.5, 4, 11.5, 0.5, 0.5, 11.5, 0.5, -3.25, -2.25, 0.5, -2.75, -2.75, 0.5, -2.25, -5.25, 0.5, 5.75, -5.25, 0.5, 5.75, -1.5, 0.5, 8.25, -0.5, 0.5, 8.25, 2.5, 0.5, -8.25, -2.25, 0.5, -8.25, -2.25, 0.5, -2.75, -2.25, 0.5, -2.75, -5.25, 0.5, 5.75, 2.5, 0.5, 9.75, 9.25, 0.5, 4.25, 11.5, 0.5, -5.5, 2.5, 0.5, -8.25, -6.75, 0.5, -2.25, -7, 0.5, 5.5, -5.25, 0.5, 5.75, -2.75, 0.5, -2.25, 9.25, 0.5, 4.25, 11.5, 0.5, -3.25, 11.5, 0.5, -5.5, -13.5, 0.5, 3.5, -13.5, 0.5, 1.75, -13.75, 0.5, 1, -14.25, 0.5, 1, -14.25, 0.5, 4.25, -13.75, 0.5, 4.25, -12.25, 0.5, 3.5, -12, 0.5, 4.75, -9.25, 0.5, 5.5, -12, 0.5, 0.75, -12.25, 0.5, 1.75, -12.25, 0.5, 3.5, -12, 0.5, 0.75, -12.25, 0.5, 3.5, -9.25, 0.5, 5.5, -7, 0.5, 5.5, -6.75, 0.5, -2.25, -9, 0.5, -2.25, -12.25, 0.5, 1.75, -13.5, 0.5, 1.75, -13.5, 0.5, 3.5, -12.25, 0.5, 3.5, 17.5, 0.5, -1.5, 15.75, 0.5, -1.5, 15.75, 0.5, 0.25, 17.5, 0.5, 5, 11.5, 0.5, 0.5, 10.5, 0.5, 4, 11, 0.5, 4.25, 11.5, 0.5, 0.5, 11, 0.5, 4.25, 11, 0.5, 5, 17.5, 0.5, 5, 15.25, 0.5, 0.75, 17.5, 0.5, 5, 15.75, 0.5, 0.25, 15.25, 0.5, 0.75, -13.5, 0.5, 5.25, -13.75, 0.5, 4.25, -14.25, 0.5, 4.25, -9.25, 0.5, 5.5, -12, 0.5, 4.75, -12.25, 0.5, 5.25, -9.25, 0.5, 5.5, -12.25, 0.5, 5.25, -13.5, 0.5, 5.25, -12.5, 0.5, 8.75, -9.5, 0.5, 8.5, -12.5, 0.5, 8.75, -13.5, 0.5, 5.25, -14.25, 0.5, 4.25, -14.25, 0.5, 14.25, -12.5, 0.5, 14.25, 17.5, 0.5, 5, 11, 0.5, 5, 10, 0.5, 5.75, 10, 0.5, 14.25, 17.5, 0.5, 14.25, 0.75, 0.5, 13.5, 0, 0.5, 13.75, 0, 0.5, 14.25, 10, 0.5, 14.25, 2, 0.5, 11.25, 0.75, 0.5, 12.5, 0.75, 0.5, 13.5, 10, 0.5, 14.25, 3, 0.5, 11, 10, 0.5, 14.25, 10, 0.5, 5.75, 9.25, 0.5, 5.25, 3, 0.5, 10, 3, 0.5, 11, 9.25, 0.5, 5.25, 2.5, 0.5, 9.75, 3, 0.5, 10, 0, 0.5, 14.25, 0, 0.5, 13.75, -0.75, 0.5, 13.5, -2.25, 0.5, 14.25, -1.5, 0.5, 10, -1.75, 0.5, 9, -2.25, 0.5, 9.25, 0.5, 0.5, 12, 1.5, 0.5, 10.75, -0.5, 0.5, 10, -1.5, 0.5, 10, -0.75, 0.5, 12.25, 0.5, 0.5, 12, 0.75, 0.5, 12.5, 2, 0.5, 11.25, 1.5, 0.5, 10.75, -2.25, 0.5, 14.25, -0.75, 0.5, 13.5, -0.75, 0.5, 12.25, -1.5, 0.5, 10, -2.25, 0.5, 9.25, 1.5, 0.5, 10.75, -0.25, 0.5, 9.5, -0.5, 0.5, 10, -11.5, 3.75, 9.5, -11.5, 3.75, 14.5, -9.5, 5.25, 14.5, -9.5, 5.25, 9.5, -5.25, 5, 9.5, -5.25, 5, 14.5, -3.25, 3.75, 14.5, -3.25, 3.75, 9.5, -8.25, 0.5, 9.75, -8.25, 0.5, 11.5, -6.5, 0.5, 11.5, -6.5, 0.5, 9.75, -8.25, 3.5, 12.75, -8.25, 3.5, 14.25, -6.5, 3.5, 14.25, -6.5, 3.5, 12.75)
polygons = [PackedInt32Array(1, 0, 5), PackedInt32Array(5, 0, 4), PackedInt32Array(5, 4, 2), PackedInt32Array(2, 4, 3), PackedInt32Array(7, 6, 8), PackedInt32Array(8, 6, 9), PackedInt32Array(10, 15, 11), PackedInt32Array(11, 15, 12), PackedInt32Array(12, 15, 14), PackedInt32Array(12, 14, 16), PackedInt32Array(16, 14, 13), PackedInt32Array(18, 17, 19), PackedInt32Array(19, 17, 20), PackedInt32Array(22, 21, 23), PackedInt32Array(23, 21, 24), PackedInt32Array(26, 25, 27), PackedInt32Array(27, 25, 28), PackedInt32Array(29, 32, 30), PackedInt32Array(30, 32, 31), PackedInt32Array(34, 33, 35), PackedInt32Array(35, 33, 36), PackedInt32Array(38, 37, 39), PackedInt32Array(39, 37, 40), PackedInt32Array(43, 42, 41), PackedInt32Array(45, 44, 46), PackedInt32Array(46, 44, 47), PackedInt32Array(50, 49, 48), PackedInt32Array(52, 51, 53), PackedInt32Array(53, 51, 54), PackedInt32Array(54, 51, 55), PackedInt32Array(57, 56, 58), PackedInt32Array(58, 56, 59), PackedInt32Array(62, 61, 60), PackedInt32Array(64, 63, 65), PackedInt32Array(65, 63, 66), PackedInt32Array(68, 67, 69), PackedInt32Array(69, 67, 70), PackedInt32Array(70, 67, 72), PackedInt32Array(70, 72, 71), PackedInt32Array(74, 73, 75), PackedInt32Array(75, 73, 76), PackedInt32Array(79, 78, 77), PackedInt32Array(82, 81, 80), PackedInt32Array(84, 83, 85), PackedInt32Array(85, 83, 86), PackedInt32Array(89, 88, 87), PackedInt32Array(91, 90, 92), PackedInt32Array(92, 90, 93), PackedInt32Array(95, 94, 96), PackedInt32Array(96, 94, 97), PackedInt32Array(99, 98, 100), PackedInt32Array(100, 98, 101), PackedInt32Array(103, 102, 104), PackedInt32Array(104, 102, 105), PackedInt32Array(107, 106, 108), PackedInt32Array(110, 109, 111), PackedInt32Array(111, 109, 112), PackedInt32Array(115, 114, 113), PackedInt32Array(117, 116, 118), PackedInt32Array(118, 116, 120), PackedInt32Array(118, 120, 119), PackedInt32Array(122, 121, 123), PackedInt32Array(123, 121, 124), PackedInt32Array(124, 121, 125), PackedInt32Array(128, 127, 126), PackedInt32Array(131, 130, 129), PackedInt32Array(134, 133, 135), PackedInt32Array(135, 133, 132), PackedInt32Array(135, 132, 136), PackedInt32Array(136, 132, 137), PackedInt32Array(141, 140, 138), PackedInt32Array(138, 140, 139), PackedInt32Array(143, 142, 144), PackedInt32Array(144, 142, 145), PackedInt32Array(148, 147, 146), PackedInt32Array(150, 149, 151), PackedInt32Array(151, 149, 152), PackedInt32Array(155, 154, 153), PackedInt32Array(157, 156, 158), PackedInt32Array(158, 156, 159), PackedInt32Array(162, 161, 160), PackedInt32Array(165, 164, 163), PackedInt32Array(170, 169, 166), PackedInt32Array(166, 169, 167), PackedInt32Array(167, 169, 168), PackedInt32Array(172, 171, 173), PackedInt32Array(173, 171, 176), PackedInt32Array(173, 176, 175), PackedInt32Array(173, 175, 174), PackedInt32Array(178, 177, 179), PackedInt32Array(179, 177, 180), PackedInt32Array(180, 177, 181), PackedInt32Array(181, 177, 182), PackedInt32Array(184, 183, 185), PackedInt32Array(185, 183, 186), PackedInt32Array(188, 187, 189), PackedInt32Array(189, 187, 190), PackedInt32Array(192, 191, 193), PackedInt32Array(193, 191, 194), PackedInt32Array(195, 198, 196), PackedInt32Array(196, 198, 197), PackedInt32Array(203, 202, 199), PackedInt32Array(199, 202, 200), PackedInt32Array(200, 202, 201), PackedInt32Array(206, 205, 204), PackedInt32Array(210, 209, 207), PackedInt32Array(207, 209, 208), PackedInt32Array(213, 212, 211), PackedInt32Array(215, 214, 216), PackedInt32Array(216, 214, 217), PackedInt32Array(219, 218, 220), PackedInt32Array(220, 218, 221), PackedInt32Array(221, 218, 222), PackedInt32Array(225, 224, 223), PackedInt32Array(227, 226, 228), PackedInt32Array(228, 226, 229), PackedInt32Array(231, 230, 232), PackedInt32Array(232, 230, 234), PackedInt32Array(232, 234, 233), PackedInt32Array(236, 235, 237), PackedInt32Array(237, 235, 238), PackedInt32Array(238, 235, 240), PackedInt32Array(238, 240, 239), PackedInt32Array(243, 242, 241), PackedInt32Array(245, 244, 246), PackedInt32Array(246, 244, 247), PackedInt32Array(250, 249, 248), PackedInt32Array(252, 251, 253), PackedInt32Array(253, 251, 254), PackedInt32Array(256, 255, 257), PackedInt32Array(257, 255, 258), PackedInt32Array(260, 259, 261), PackedInt32Array(261, 259, 262), PackedInt32Array(264, 263, 265), PackedInt32Array(265, 263, 266), PackedInt32Array(268, 267, 269), PackedInt32Array(269, 267, 271), PackedInt32Array(269, 271, 270), PackedInt32Array(274, 273, 272), PackedInt32Array(279, 278, 280), PackedInt32Array(280, 278, 277), PackedInt32Array(280, 277, 275), PackedInt32Array(275, 277, 276), PackedInt32Array(283, 282, 281), PackedInt32Array(284, 286, 285), PackedInt32Array(288, 287, 289), PackedInt32Array(289, 287, 290), PackedInt32Array(292, 291, 293), PackedInt32Array(293, 291, 294), PackedInt32Array(294, 291, 295), PackedInt32Array(299, 298, 296), PackedInt32Array(296, 298, 297), PackedInt32Array(302, 301, 300), PackedInt32Array(305, 304, 303), PackedInt32Array(308, 307, 306), PackedInt32Array(310, 309, 311), PackedInt32Array(311, 309, 312), PackedInt32Array(312, 309, 313), PackedInt32Array(314, 316, 315), PackedInt32Array(318, 317, 319), PackedInt32Array(319, 317, 322), PackedInt32Array(319, 322, 320), PackedInt32Array(320, 322, 321), PackedInt32Array(325, 324, 323), PackedInt32Array(327, 326, 328), PackedInt32Array(328, 326, 329), PackedInt32Array(332, 331, 330), PackedInt32Array(335, 334, 333), PackedInt32Array(338, 337, 336), PackedInt32Array(340, 339, 341), PackedInt32Array(341, 339, 342), PackedInt32Array(343, 346, 344), PackedInt32Array(344, 346, 345), PackedInt32Array(349, 348, 347), PackedInt32Array(351, 350, 352), PackedInt32Array(352, 350, 353), PackedInt32Array(355, 354, 356), PackedInt32Array(356, 354, 357), PackedInt32Array(361, 362, 358), PackedInt32Array(358, 362, 360), PackedInt32Array(358, 360, 359), PackedInt32Array(368, 367, 363), PackedInt32Array(363, 367, 366), PackedInt32Array(363, 366, 365), PackedInt32Array(363, 365, 364), PackedInt32Array(372, 374, 373), PackedInt32Array(373, 374, 369), PackedInt32Array(369, 374, 371), PackedInt32Array(369, 371, 370), PackedInt32Array(376, 379, 377), PackedInt32Array(377, 379, 380), PackedInt32Array(380, 379, 375), PackedInt32Array(380, 375, 378), PackedInt32Array(382, 381, 383), PackedInt32Array(383, 381, 384), PackedInt32Array(387, 386, 388), PackedInt32Array(388, 386, 385), PackedInt32Array(390, 389, 391), PackedInt32Array(391, 389, 392), PackedInt32Array(392, 389, 393), PackedInt32Array(395, 394, 396), PackedInt32Array(396, 394, 397), PackedInt32Array(400, 399, 398), PackedInt32Array(403, 402, 401), PackedInt32Array(406, 405, 407), PackedInt32Array(407, 405, 404), PackedInt32Array(409, 408, 410), PackedInt32Array(410, 408, 411), PackedInt32Array(413, 412, 414), PackedInt32Array(414, 412, 415), PackedInt32Array(416, 418, 417), PackedInt32Array(420, 419, 421), PackedInt32Array(421, 419, 422), PackedInt32Array(424, 423, 425), PackedInt32Array(425, 423, 426), PackedInt32Array(429, 428, 427), PackedInt32Array(432, 431, 430), PackedInt32Array(435, 434, 433), PackedInt32Array(441, 440, 436), PackedInt32Array(436, 440, 439), PackedInt32Array(436, 439, 438), PackedInt32Array(436, 438, 437), PackedInt32Array(443, 442, 444), PackedInt32Array(444, 442, 445), PackedInt32Array(448, 447, 446), PackedInt32Array(454, 453, 449), PackedInt32Array(449, 453, 450), PackedInt32Array(450, 453, 451), PackedInt32Array(451, 453, 452), PackedInt32Array(457, 456, 455), PackedInt32Array(460, 459, 458), PackedInt32Array(463, 462, 464), PackedInt32Array(464, 462, 461), PackedInt32Array(464, 461, 466), PackedInt32Array(464, 466, 465), PackedInt32Array(470, 469, 467), PackedInt32Array(467, 469, 468), PackedInt32Array(472, 471, 473), PackedInt32Array(473, 471, 474), PackedInt32Array(476, 475, 477), PackedInt32Array(479, 478, 480), PackedInt32Array(480, 478, 482), PackedInt32Array(480, 482, 481), PackedInt32Array(485, 484, 483), PackedInt32Array(488, 487, 486), PackedInt32Array(491, 490, 489), PackedInt32Array(494, 493, 495), PackedInt32Array(495, 493, 496), PackedInt32Array(496, 493, 492), PackedInt32Array(498, 497, 499), PackedInt32Array(499, 497, 501), PackedInt32Array(499, 501, 500), PackedInt32Array(503, 502, 504), PackedInt32Array(504, 502, 505), PackedInt32Array(505, 502, 506), PackedInt32Array(508, 507, 509), PackedInt32Array(509, 507, 510), PackedInt32Array(512, 511, 513), PackedInt32Array(513, 511, 515), PackedInt32Array(513, 515, 514), PackedInt32Array(520, 519, 516), PackedInt32Array(516, 519, 517), PackedInt32Array(517, 519, 518), PackedInt32Array(523, 522, 521), PackedInt32Array(525, 524, 526), PackedInt32Array(526, 524, 527), PackedInt32Array(528, 530, 529), PackedInt32Array(531, 535, 532), PackedInt32Array(532, 535, 533), PackedInt32Array(533, 535, 534), PackedInt32Array(539, 538, 536), PackedInt32Array(536, 538, 537), PackedInt32Array(541, 540, 542), PackedInt32Array(542, 540, 543), PackedInt32Array(543, 540, 544), PackedInt32Array(547, 546, 545), PackedInt32Array(551, 550, 548), PackedInt32Array(548, 550, 549), PackedInt32Array(555, 554, 552), PackedInt32Array(552, 554, 553), PackedInt32Array(559, 558, 556), PackedInt32Array(556, 558, 557), PackedInt32Array(563, 562, 560), PackedInt32Array(560, 562, 561)]

[node name="World" type="Node3D" groups=["world"]]

[node name="UserInterface" parent="." instance=ExtResource("6_d1k1r")]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_r7tp6")

[node name="1" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5.23707, 1, 47)

[node name="2" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -5, 1, 47)

[node name="3" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -6.76293, 1, 38)

[node name="4" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6.23707, 1, 38)

[node name="NavigationRegion3D" type="NavigationRegion3D" parent="."]
navigation_mesh = SubResource("NavigationMesh_qv16l")

[node name="Spruce" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 12.858)

[node name="Spruce2" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.2743, 0, 10.531)

[node name="Spruce3" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.981422, 0, 9.14227)

[node name="Spruce4" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12.8776, 0, 4.3561)

[node name="Spruce5" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12.8776, 0, 0.943969)

[node name="Spruce6" parent="NavigationRegion3D" instance=ExtResource("6_6kmmr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10.0803, 0, 4.84485)

[node name="GridMap" type="GridMap" parent="NavigationRegion3D" groups=["ground"]]
mesh_library = ExtResource("2_76oo2")
cell_size = Vector3(3, 3, 3)
cell_center_y = false
data = {
"cells": PackedInt32Array(65531, 65522, 1441794, 65531, 65523, 1441802, 65531, 65524, 1441802, 65531, 65525, 1441802, 65531, 65526, 1441802, 65531, 65527, 1441802, 65531, 65528, 1441802, 65531, 65529, 1441802, 65531, 65530, 1441794, 65531, 65531, 1441794, 65531, 65532, 1441794, 65531, 65533, 1441794, 65531, 65534, 1441794, 65531, 65535, 1441794, 65531, 0, 1441794, 65531, 1, 1441794, 65531, 2, 1441794, 65531, 3, 1441794, 65531, 4, 1441794, 65532, 65522, 1441794, 65532, 65523, 1441804, 65532, 65524, 10, 65532, 65526, 10, 65532, 65527, 11, 65532, 65528, 1441803, 65532, 65529, 11, 65533, 65522, 1441794, 65533, 65523, 1441794, 65533, 65524, 10, 65533, 65526, 1441803, 65533, 65527, 1441794, 65533, 65528, 1441794, 65533, 65529, 1441794, 65534, 65522, 1441794, 65534, 65523, 1441794, 65534, 65524, 11, 65534, 65525, 11, 65534, 65526, 11, 65534, 65527, 1441794, 65534, 65528, 1441794, 65534, 65529, 1441794, 65535, 65522, 1441794, 65535, 65523, 1441794, 65535, 65524, 1441794, 65535, 65525, 1441794, 65535, 65526, 1441794, 65535, 65527, 1441794, 65535, 65528, 1441794, 65535, 65529, 1441794, 0, 65522, 1441794, 0, 65523, 1441794, 0, 65524, 1441794, 0, 65525, 1441794, 0, 65526, 1441794, 0, 65527, 1441794, 0, 65528, 1441794, 0, 65529, 1441794, 1, 65522, 1441794, 1, 65523, 1441794, 1, 65524, 1441794, 1, 65525, 1441794, 1, 65526, 1441794, 1, 65527, 1441794, 1, 65528, 1441794, 1, 65529, 1441794, 2, 65522, 1441794, 2, 65523, 1441794, 2, 65524, 1441794, 2, 65525, 1441794, 2, 65526, 1441794, 2, 65527, 1441794, 2, 65528, 1441794, 2, 65529, 1441794, 3, 65522, 1441794, 3, 65523, 1441794, 3, 65524, 1441794, 3, 65525, 1441794, 3, 65526, 1441794, 3, 65527, 1441794, 3, 65528, 1441794, 3, 65529, 1441794, 4, 65522, 15, 4, 65523, 15, 4, 65524, 15, 4, 65525, 15, 4, 65526, 15, 4, 65527, 1441794, 4, 65528, 1441794, 4, 65529, 1441794, 5, 65522, 1441794, 5, 65523, 1441794, 5, 65524, 1441794, 5, 65525, 1441794, 5, 65526, 1441794, 5, 65527, 1441794, 5, 65528, 1441794, 5, 65529, 1441794, 5, 65530, 1441794, 5, 65531, 1441794, 5, 65532, 1441794, 5, 65533, 1441794, 5, 65534, 1441794, 5, 65535, 1441794, 5, 0, 1441794, 5, 1, 1441794, 5, 2, 1441794, 5, 3, 1441794, 5, 4, 1441794, 6, 65522, 1441792, 6, 65523, 1441792, 6, 65524, 1441792, 6, 65525, 1441792, 6, 65526, 1441792, 6, 65527, 1441792, 6, 65528, 1441792, 6, 65529, 1441792, 6, 65530, 1441792, 6, 65531, 1441792, 6, 65532, 1441792, 6, 65533, 1441792, 6, 65534, 1441792, 6, 65535, 1441792, 6, 0, 1441792, 6, 1, 1441792, 6, 2, 1441792, 6, 3, 1441792, 6, 4, 1441792, 65530, 65522, 1048576, 65530, 65523, 1048576, 65530, 65524, 1048576, 65530, 65525, 1048576, 65530, 65526, 1048576, 65530, 65527, 1048576, 65530, 65528, 1048576, 65530, 65529, 1048576, 65530, 65530, 1048576, 65530, 65531, 1048576, 65530, 65532, 1048576, 65530, 65533, 1048576, 65530, 65534, 1048576, 65530, 65535, 1048577, 65530, 0, 1048576, 65530, 1, 1048576, 65530, 2, 1048576, 65530, 3, 1048576, 65530, 4, 1048576, 65531, 65521, 0, 65532, 65521, 0, 65533, 65521, 0, 65534, 65521, 0, 65535, 65521, 0, 0, 65521, 0, 1, 65521, 0, 2, 65521, 0, 3, 65521, 0, 4, 65521, 0, 5, 65521, 0, 65531, 5, 655360, 65532, 5, 655360, 65533, 5, 655360, 65534, 5, 655360, 65535, 5, 655360, 0, 5, 655360, 1, 5, 655361, 2, 5, 655360, 3, 5, 655360, 4, 5, 655360, 5, 5, 655360, 65532, 65530, 2, 65532, 65531, 2, 65532, 65532, 2, 65532, 65533, 2, 65532, 65534, 2, 65532, 65535, 2, 65532, 0, 2, 65532, 1, 2, 65532, 2, 2, 65532, 3, 655363, 65532, 4, 1441795, 65533, 65530, 2, 65533, 65531, 2, 65533, 65532, 655363, 65533, 65533, 655363, 65533, 65534, 1441795, 65533, 65535, 2, 65533, 0, 2, 65533, 1, 2, 65533, 2, 3, 65533, 3, 2, 65533, 4, 1048579, 65534, 65530, 2, 65534, 65531, 2, 65534, 65532, 1048579, 65534, 65533, 1441795, 65534, 65534, 3, 65534, 65535, 2, 65534, 0, 2, 65534, 1, 2, 65534, 2, 2, 65534, 3, 1048579, 65534, 4, 3, 65535, 65530, 2, 65535, 65531, 2, 65535, 65532, 1441799, 65535, 65533, 2, 65535, 65534, 2, 65535, 65535, 2, 65535, 0, 2, 65535, 1, 2, 65535, 2, 2, 65535, 3, 2, 65535, 4, 2, 0, 65530, 2, 0, 65531, 2, 0, 65532, 2, 0, 65533, 2, 0, 65534, 2, 0, 65535, 2, 0, 0, 2, 0, 1, 2, 0, 2, 2, 0, 3, 2, 0, 4, 2, 1, 65530, 2, 1, 65531, 2, 1, 65532, 2, 1, 65533, 2, 1, 65534, 2, 1, 65535, 2, 1, 0, 2, 1, 1, 2, 1, 2, 2, 1, 3, 2, 1, 4, 2, 2, 65530, 2, 2, 65531, 2, 2, 65532, 2, 2, 65533, 2, 2, 65534, 2, 2, 65535, 2, 2, 0, 2, 2, 1, 2, 2, 2, 2, 2, 3, 2, 2, 4, 2, 3, 65530, 2, 3, 65531, 2, 3, 65532, 2, 3, 65533, 2, 3, 65534, 2, 3, 65535, 2, 3, 0, 2, 3, 1, 2, 3, 2, 2, 3, 3, 2, 3, 4, 2, 4, 65530, 2, 4, 65531, 1048580, 4, 65532, 2, 4, 65533, 1048580, 4, 65534, 2, 4, 65535, 1048580, 4, 0, 2, 4, 1, 2, 4, 2, 2, 4, 3, 2, 4, 4, 2, 131069, 4, 1048580, 131069, 3, 1048580, 131069, 2, 1048581, 131070, 4, 1441798, 131070, 3, 1441798, 131068, 4, 1048582, 131068, 3, 1048582, 196605, 4, 1048581, 196605, 3, 1048581, 131070, 65534, 1441798, 131070, 65533, 1441798, 131070, 65532, 1441798, 131069, 65534, 1048582, 131069, 65533, 1048582, 131069, 65532, 1048582, 65540, 65535, 1048581, 65540, 65534, 1048581, 65540, 65533, 1048581, 65540, 65532, 1048581, 65540, 65531, 1048581, 65533, 65525, 1441802, 65532, 65525, 1441802, 131069, 65529, 18, 131070, 65529, 18, 131070, 65528, 18, 131070, 65527, 18, 131069, 65527, 18, 131069, 65528, 18, 131069, 65526, 19, 131071, 65528, 18, 65536, 65528, 18, 65537, 65528, 18, 65538, 65528, 18, 65539, 65528, 18, 65539, 65529, 18, 65540, 65529, 18, 65541, 65529, 18, 65541, 65528, 18, 65541, 65527, 18, 65540, 65527, 18, 65539, 65527, 18, 65540, 65528, 18, 65540, 65526, 19)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="GridMap2" type="GridMap" parent="NavigationRegion3D"]
mesh_library = ExtResource("2_76oo2")
cell_size = Vector3(3, 3, 3)
cell_center_y = false
data = {
"cells": PackedInt32Array(65534, 65529, 1441809, 65534, 65527, 1441809, 65533, 65529, 1441809, 0, 65528, 1048593, 1, 65528, 1048593, 2, 65528, 1048593, 3, 65528, 1048593, 3, 65529, 655377, 5, 65529, 1441809, 5, 65527, 17, 3, 65527, 1048593)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="StairFix" parent="NavigationRegion3D" instance=ExtResource("3_6e31e")]

[node name="StairFix2" parent="NavigationRegion3D" instance=ExtResource("3_6e31e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.94606, 0, -12.0194)

[node name="Player" parent="." instance=ExtResource("2_77a1h")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, -1.5075, 7, -3.98143)
max_snowball_count = 12

[node name="Enemy2" parent="." node_paths=PackedStringArray("player") instance=ExtResource("4_oa0vr")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, -26)
max_energy = 3
attack_range = 10.0
player_path = NodePath("../Player")
player = NodePath("../Player")

[node name="Enemy" parent="." node_paths=PackedStringArray("player") instance=ExtResource("5_rs8k7")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.57635, 4.76837e-07, -14.82)
skin = 3
player_path = NodePath("../Player")
player = NodePath("../Player")

[node name="Enemy3" parent="." node_paths=PackedStringArray("player") instance=ExtResource("5_rs8k7")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.42365, 4.76837e-07, -19.82)
skin = 5
player_path = NodePath("../Player")
player = NodePath("../Player")

[node name="snowman" parent="." instance=ExtResource("7_6pwac")]
transform = Transform3D(0.443947, 0, 0.896053, 0, 1, 0, -0.896053, 0, 0.443947, -4.62829, 0, 7.68474)

[node name="GPUParticlesCollisionBox3D" type="GPUParticlesCollisionBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 13.5011, 3.1993, -7.51254)
size = Vector3(3, 0.3, 15)

[node name="Ladder" parent="." instance=ExtResource("8_jnw3q")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.86571, 0, -6)

[node name="snowman_destroyed" parent="." instance=ExtResource("9_eaiee")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2, 0, -4)
